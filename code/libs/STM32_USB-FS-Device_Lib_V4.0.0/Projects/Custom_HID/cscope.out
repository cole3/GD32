cscope 15 $HOME/work/gd32/code/libs/STM32_USB-FS-Device_Lib_V4.0.0/Projects/Custom_HID -q 0000000799 0000070729
	@inc/hw_config.h

30 #i‚de‡
__HW_CONFIG_H


31 
	#__HW_CONFIG_H


	)

34 
	~"∂©f‹m_c⁄fig.h
"

35 
	~"usb_ty≥.h
"

42 
Së_Sy°em
();

43 
Së_USBClock
();

44 
E¡î_LowPowîMode
();

45 
Lóve_LowPowîMode
();

46 
USB_I¡îru±s_C⁄fig
();

47 
USB_CabÀ_C⁄fig
 (
Fun˘i⁄ÆSèã
 
NewSèã
);

48 
GPIO_C⁄figuøti⁄
();

49 
EXTI_C⁄figuøti⁄
();

50 
ADC_C⁄figuøti⁄
();

51 
ADC30x_C⁄figuøti⁄
();

52 
Gë_SîülNum
();

53 
TimögDñay_De¸emít
();

54 
Dñay
(
__IO
 
uöt32_t
 
nCou¡
);

	@inc/platform_config.h

30 #i‚de‡
__PLATFORM_CONFIG_H


31 
	#__PLATFORM_CONFIG_H


	)

35 #i‡
deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

36 
	~"°m32l1xx.h
"

37 #i‡
deföed
 (
USE_STM32L152_EVAL
)

38 
	~"°m32l152_evÆ.h
"

39 #ñi‡
deföed
 (
USE_STM32L152D_EVAL
)

40 
	~"°m32l152d_evÆ.h
"

44 #ñi‡
deföed
 (
STM32F10X_MD
Ë|| deföed (
STM32F10X_HD
Ë|| deföed (
STM32F10X_XL
)

45 
	~"°m32f10x.h
"

46 #i‡
deföed
 (
USE_STM3210B_EVAL
)

47 
	~"°m3210b_evÆ.h
"

48 #ñi‡
deföed
 (
USE_STM3210E_EVAL
)

49 
	~"°m3210e_evÆ.h
"

53 #ñi‡
deföed
 (
USE_STM32373C_EVAL
)

54 
	~"°m32f37x.h
"

55 
	~"°m32373c_evÆ.h
"

56 #ñi‡
deföed
 (
USE_STM32303C_EVAL
)

57 
	~"°m32f30x.h
"

58 
	~"°m32303c_evÆ.h
"

65 #i‡!
deföed
 (
USE_STM3210B_EVAL
Ë&& !deföed (
USE_STM3210E_EVAL
Ë&& !deföed (
USE_STM32L152_EVAL
Ë&& !deföed (
USE_STM32L152D_EVAL
)&& !deföed (
USE_STM32373C_EVAL
Ë&& !deföed (
USE_STM32303C_EVAL
)

71 
	#USE_STM32303C_EVAL


	)

76 #i‡
deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
Ë|| deföed(
STM32L1XX_MD_PLUS
)

78 
	#ID1
 (0x1FF80050)

	)

79 
	#ID2
 (0x1FF80054)

	)

80 
	#ID3
 (0x1FF80064)

	)

82 #ñi‡
deföed
 (
STM32F37X
Ë|| deföed(
STM32F30X
)

84 
	#ID1
 (0x1FFFF7AC)

	)

85 
	#ID2
 (0x1FFFF7B0)

	)

86 
	#ID3
 (0x1FFFF7B4)

	)

90 
	#ID1
 (0x1FFFF7E8)

	)

91 
	#ID2
 (0x1FFFF7EC)

	)

92 
	#ID3
 (0x1FFFF7F0)

	)

97 #ifde‡
USE_STM3210B_EVAL


98 
	#USB_DISCONNECT
 
GPIOD


	)

99 
	#USB_DISCONNECT_PIN
 
GPIO_Pö_9


	)

100 
	#RCC_APB2Pîùh_GPIO_DISCONNECT
 
RCC_APB2Pîùh_GPIOD


	)

101 
	#ADC1_DR_Addªss
 ((
uöt32_t
)0x4001244C)

	)

103 #ñi‡
deföed
 (
USE_STM3210E_EVAL
)

104 
	#USB_DISCONNECT
 
GPIOB


	)

105 
	#USB_DISCONNECT_PIN
 
GPIO_Pö_14


	)

106 
	#RCC_APB2Pîùh_GPIO_DISCONNECT
 
RCC_APB2Pîùh_GPIOB


	)

107 
	#ADC1_DR_Addªss
 ((
uöt32_t
)0x4001244C)

	)

109 #ñi‡
deföed
 (
USE_STM32L152_EVAL
Ë|| deföed (
USE_STM32L152D_EVAL
)

125 #i‡!
deföed
(
USB_USE_EXTERNAL_PULLUP
)

126 
	#STM32L15_USB_CONNECT
 
	`SYSCFG_USBPuCmd
(
ENABLE
)

	)

127 
	#STM32L15_USB_DISCONNECT
 
	`SYSCFG_USBPuCmd
(
DISABLE
)

	)

128 
	#RCC_AHBPîùh_GPIO_DISCONNECT
 0

	)

130 #ñi‡
deföed
(
USB_USE_EXTERNAL_PULLUP
)

133 
	#USB_DISCONNECT
 
GPIOA


	)

134 
	#USB_DISCONNECT_PIN
 
GPIO_Pö_0


	)

135 
	#RCC_AHBPîùh_GPIO_DISCONNECT
 
RCC_AHBPîùh_GPIOA


	)

136 
	#STM32L15_USB_CONNECT
 
	`GPIO_Re£tBôs
(
USB_DISCONNECT
, 
USB_DISCONNECT_PIN
)

	)

137 
	#STM32L15_USB_DISCONNECT
 
	`GPIO_SëBôs
(
USB_DISCONNECT
, 
USB_DISCONNECT_PIN
)

	)

140 
	#ADC1_DR_Addªss
 ((
uöt32_t
)0x40012458)

	)

144 #i‡
deföed
 (
USE_STM32373C_EVAL
)

145 
	#USB_DISCONNECT
 
GPIOC


	)

146 
	#USB_DISCONNECT_PIN
 
GPIO_Pö_5


	)

147 
	#RCC_AHBPîùh_GPIO_DISCONNECT
 
RCC_AHBPîùh_GPIOC


	)

149 #i‡
deföed
 (
USE_STM32303C_EVAL
)

150 
	#USB_DISCONNECT
 
GPIOB


	)

151 
	#USB_DISCONNECT_PIN
 
GPIO_Pö_8


	)

152 
	#RCC_AHBPîùh_GPIO_DISCONNECT
 
RCC_AHBPîùh_GPIOB


	)

154 
	#RCC_AHBPîùh_ALLGPIO
 (
RCC_AHBPîùh_GPIOA
 \

	)

155 | 
	gRCC_AHBPîùh_GPIOB
 \

156 | 
	gRCC_AHBPîùh_GPIOC
 \

157 | 
	gRCC_AHBPîùh_GPIOD
 \

158 | 
	gRCC_AHBPîùh_GPIOE
 \

159 | 
	gRCC_AHBPîùh_GPIOF
 )

162 #i‡
deföed
 (
USE_STM32L152_EVAL
)

164 
	#RCC_AHBPîùh_GPIO_IOAIN
 
RCC_AHBPîùh_GPIOB


	)

165 
	#GPIO_IOAIN
 
GPIOB


	)

166 
	#GPIO_IOAIN_PIN
 
GPIO_Pö_12


	)

167 
	#ADC_AIN_CHANNEL
 
ADC_Ch™√l_18


	)

169 #ñi‡
deföed
 (
USE_STM32L152D_EVAL
)

171 
	#RCC_AHBPîùh_GPIO_IOAIN
 
RCC_AHBPîùh_GPIOF


	)

172 
	#GPIO_IOAIN
 
GPIOF


	)

173 
	#GPIO_IOAIN_PIN
 
GPIO_Pö_10


	)

174 
	#ADC_AIN_CHANNEL
 
ADC_Ch™√l_31


	)

176 #ñi‡
deföed
 (
USE_STM32373C_EVAL
)

178 
	#ADC1_DR_Addªss
 0x4001244C

	)

180 
	#RCC_AHBPîùh_GPIO_IOAIN
 
RCC_AHBPîùh_GPIOB


	)

181 
	#GPIO_IOAIN
 
GPIOB


	)

182 
	#GPIO_IOAIN_PIN
 
GPIO_Pö_1


	)

183 
	#ADC_AIN_CHANNEL
 
ADC_Ch™√l_9


	)

184 
	#GPIO_Mode_AIN
 
GPIO_Mode_AN


	)

186 #ñi‡
deföed
 (
USE_STM32303C_EVAL
)

188 
	#ADC1_DR_Addªss
 0x5000030C

	)

190 
	#RCC_AHBPîùh_GPIO_IOAIN
 
RCC_AHBPîùh_GPIOC


	)

191 
	#GPIO_IOAIN
 
GPIOC


	)

192 
	#GPIO_IOAIN_PIN
 
GPIO_Pö_1


	)

193 
	#ADC_AIN_CHANNEL
 
ADC_Ch™√l_7


	)

194 
	#GPIO_Mode_AIN
 
GPIO_Mode_AN


	)

197 
	#RCC_APB2Pîùh_GPIO_IOAIN
 
RCC_APB2Pîùh_GPIOC


	)

198 
	#GPIO_IOAIN
 
GPIOC


	)

199 
	#GPIO_IOAIN_PIN
 
GPIO_Pö_4


	)

200 
	#ADC_AIN_CHANNEL
 
ADC_Ch™√l_14


	)

	@inc/stm32_it.h

30 #i‚de‡
__STM32_IT_H


31 
	#__STM32_IT_H


	)

34 
	~"∂©f‹m_c⁄fig.h
"

41 
NMI_H™dÀr
();

42 
H¨dFau…_H™dÀr
();

43 
MemM™age_H™dÀr
();

44 
BusFau…_H™dÀr
();

45 
UßgeFau…_H™dÀr
();

46 
SVC_H™dÀr
();

47 
DebugM⁄_H™dÀr
();

48 
PídSV_H™dÀr
();

49 
SysTick_H™dÀr
();

50 
USB_LP_CAN1_RX0_IRQH™dÀr
();

51 
DMA1_Ch™√l1_IRQH™dÀr
();

52 
EXTI9_5_IRQH™dÀr
();

53 
EXTI15_10_IRQH™dÀr
();

	@inc/stm32f10x_conf.h

30 #i‚de‡
__STM32F10x_CONF_H


31 
	#__STM32F10x_CONF_H


	)

35 
	~"°m32f10x_adc.h
"

36 
	~"°m32f10x_bkp.h
"

37 
	~"°m32f10x_ˇn.h
"

38 
	~"°m32f10x_¸c.h
"

39 
	~"°m32f10x_dac.h
"

40 
	~"°m32f10x_dbgmcu.h
"

41 
	~"°m32f10x_dma.h
"

42 
	~"°m32f10x_exti.h
"

43 
	~"°m32f10x_Êash.h
"

44 
	~"°m32f10x_fsmc.h
"

45 
	~"°m32f10x_gpio.h
"

46 
	~"°m32f10x_i2c.h
"

47 
	~"°m32f10x_iwdg.h
"

48 
	~"°m32f10x_pwr.h
"

49 
	~"°m32f10x_rcc.h
"

50 
	~"°m32f10x_πc.h
"

51 
	~"°m32f10x_sdio.h
"

52 
	~"°m32f10x_•i.h
"

53 
	~"°m32f10x_tim.h
"

54 
	~"°m32f10x_ußπ.h
"

55 
	~"°m32f10x_wwdg.h
"

56 
	~"misc.h
"

65 #ifde‡ 
USE_FULL_ASSERT


76 
	#as£π_∑øm
(
ex¥
Ë(”x¥Ë? ()0 : 
	`as£π_Áûed
((
uöt8_t
 *)
__FILE__
, 
__LINE__
))

	)

78 
as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
);

80 
	#as£π_∑øm
(
ex¥
Ë(()0)

	)

	@inc/stm32f30x_conf.h

29 #i‚de‡
__STM32F30X_CONF_H


30 
	#__STM32F30X_CONF_H


	)

34 
	~"°m32f30x_adc.h
"

35 
	~"°m32f30x_ˇn.h
"

36 
	~"°m32f30x_¸c.h
"

37 
	~"°m32f30x_comp.h
"

38 
	~"°m32f30x_dac.h
"

39 
	~"°m32f30x_dbgmcu.h
"

40 
	~"°m32f30x_dma.h
"

41 
	~"°m32f30x_exti.h
"

42 
	~"°m32f30x_Êash.h
"

43 
	~"°m32f30x_gpio.h
"

44 
	~"°m32f30x_syscfg.h
"

45 
	~"°m32f30x_i2c.h
"

46 
	~"°m32f30x_iwdg.h
"

47 
	~"°m32f30x_›amp.h
"

48 
	~"°m32f30x_pwr.h
"

49 
	~"°m32f30x_rcc.h
"

50 
	~"°m32f30x_πc.h
"

51 
	~"°m32f30x_•i.h
"

52 
	~"°m32f30x_tim.h
"

53 
	~"°m32f30x_ußπ.h
"

54 
	~"°m32f30x_wwdg.h
"

55 
	~"°m32f30x_misc.h
"

64 #ifde‡ 
USE_FULL_ASSERT


73 
	#as£π_∑øm
(
ex¥
Ë(”x¥Ë? ()0 : 
	`as£π_Áûed
((
uöt8_t
 *)
__FILE__
, 
__LINE__
))

	)

75 
as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
);

77 
	#as£π_∑øm
(
ex¥
Ë(()0)

	)

	@inc/stm32f37x_conf.h

29 #i‚de‡
__STM32F37X_CONF_H


30 
	#__STM32F37X_CONF_H


	)

34 
	~"°m32f37x_adc.h
"

35 
	~"°m32f37x_ˇn.h
"

36 
	~"°m32f37x_˚c.h
"

37 
	~"°m32f37x_¸c.h
"

38 
	~"°m32f37x_comp.h
"

39 
	~"°m32f37x_dac.h
"

40 
	~"°m32f37x_dbgmcu.h
"

41 
	~"°m32f37x_dma.h
"

42 
	~"°m32f37x_exti.h
"

43 
	~"°m32f37x_Êash.h
"

44 
	~"°m32f37x_gpio.h
"

45 
	~"°m32f37x_syscfg.h
"

46 
	~"°m32f37x_i2c.h
"

47 
	~"°m32f37x_iwdg.h
"

48 
	~"°m32f37x_pwr.h
"

49 
	~"°m32f37x_rcc.h
"

50 
	~"°m32f37x_πc.h
"

51 
	~"°m32f37x_sdadc.h
"

52 
	~"°m32f37x_•i.h
"

53 
	~"°m32f37x_tim.h
"

54 
	~"°m32f37x_ußπ.h
"

55 
	~"°m32f37x_wwdg.h
"

56 
	~"°m32f37x_misc.h
"

65 #ifde‡ 
USE_FULL_ASSERT


74 
	#as£π_∑øm
(
ex¥
Ë(”x¥Ë? ()0 : 
	`as£π_Áûed
((
uöt8_t
 *)
__FILE__
, 
__LINE__
))

	)

76 
as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
);

78 
	#as£π_∑øm
(
ex¥
Ë(()0)

	)

	@inc/stm32l1xx_conf.h

29 #i‚de‡
__STM32L1xx_CONF_H


30 
	#__STM32L1xx_CONF_H


	)

34 
	~"°m32l1xx_adc.h
"

35 
	~"°m32l1xx_¸c.h
"

36 
	~"°m32l1xx_comp.h
"

37 
	~"°m32l1xx_dac.h
"

38 
	~"°m32l1xx_dbgmcu.h
"

39 
	~"°m32l1xx_dma.h
"

40 
	~"°m32l1xx_exti.h
"

41 
	~"°m32l1xx_Êash.h
"

42 
	~"°m32l1xx_gpio.h
"

43 
	~"°m32l1xx_syscfg.h
"

44 
	~"°m32l1xx_i2c.h
"

45 
	~"°m32l1xx_iwdg.h
"

46 
	~"°m32l1xx_lcd.h
"

47 
	~"°m32l1xx_pwr.h
"

48 
	~"°m32l1xx_rcc.h
"

49 
	~"°m32l1xx_πc.h
"

50 
	~"°m32l1xx_•i.h
"

51 
	~"°m32l1xx_tim.h
"

52 
	~"°m32l1xx_ußπ.h
"

53 
	~"°m32l1xx_wwdg.h
"

54 
	~"misc.h
"

63 #ifde‡ 
USE_FULL_ASSERT


73 
	#as£π_∑øm
(
ex¥
Ë(”x¥Ë? ()0 : 
	`as£π_Áûed
((
uöt8_t
 *)
__FILE__
, 
__LINE__
))

	)

75 
as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
);

77 
	#as£π_∑øm
(
ex¥
Ë(()0)

	)

	@inc/usb_conf.h

30 #i‚de‡
__USB_CONF_H


31 
	#__USB_CONF_H


	)

43 
	#EP_NUM
 (2)

	)

50 
	#BTABLE_ADDRESS
 (0x00)

	)

54 
	#ENDP0_RXADDR
 (0x18)

	)

55 
	#ENDP0_TXADDR
 (0x58)

	)

59 
	#ENDP1_TXADDR
 (0x100)

	)

60 
	#ENDP1_RXADDR
 (0x104)

	)

69 
	#IMR_MSK
 (
CNTR_CTRM
 | 
CNTR_WKUPM
 | 
CNTR_SUSPM
 | 
CNTR_ERRM
 | 
CNTR_SOFM
 \

	)

70 | 
	gCNTR_ESOFM
 | 
	gCNTR_RESETM
 )

75 
	#EP2_IN_CÆlback
 
NOP_Pro˚ss


	)

76 
	#EP3_IN_CÆlback
 
NOP_Pro˚ss


	)

77 
	#EP4_IN_CÆlback
 
NOP_Pro˚ss


	)

78 
	#EP5_IN_CÆlback
 
NOP_Pro˚ss


	)

79 
	#EP6_IN_CÆlback
 
NOP_Pro˚ss


	)

80 
	#EP7_IN_CÆlback
 
NOP_Pro˚ss


	)

83 
	#EP2_OUT_CÆlback
 
NOP_Pro˚ss


	)

84 
	#EP3_OUT_CÆlback
 
NOP_Pro˚ss


	)

85 
	#EP4_OUT_CÆlback
 
NOP_Pro˚ss


	)

86 
	#EP5_OUT_CÆlback
 
NOP_Pro˚ss


	)

87 
	#EP6_OUT_CÆlback
 
NOP_Pro˚ss


	)

88 
	#EP7_OUT_CÆlback
 
NOP_Pro˚ss


	)

	@inc/usb_desc.h

30 #i‚de‡
__USB_DESC_H


31 
	#__USB_DESC_H


	)

38 
	#USB_DEVICE_DESCRIPTOR_TYPE
 0x01

	)

39 
	#USB_CONFIGURATION_DESCRIPTOR_TYPE
 0x02

	)

40 
	#USB_STRING_DESCRIPTOR_TYPE
 0x03

	)

41 
	#USB_INTERFACE_DESCRIPTOR_TYPE
 0x04

	)

42 
	#USB_ENDPOINT_DESCRIPTOR_TYPE
 0x05

	)

44 
	#HID_DESCRIPTOR_TYPE
 0x21

	)

45 
	#CUSTOMHID_SIZ_HID_DESC
 0x09

	)

46 
	#CUSTOMHID_OFF_HID_DESC
 0x12

	)

48 
	#CUSTOMHID_SIZ_DEVICE_DESC
 18

	)

49 
	#CUSTOMHID_SIZ_CONFIG_DESC
 41

	)

50 
	#CUSTOMHID_SIZ_REPORT_DESC
 163

	)

51 
	#CUSTOMHID_SIZ_STRING_LANGID
 4

	)

52 
	#CUSTOMHID_SIZ_STRING_VENDOR
 38

	)

53 
	#CUSTOMHID_SIZ_STRING_PRODUCT
 32

	)

54 
	#CUSTOMHID_SIZ_STRING_SERIAL
 26

	)

56 
	#STANDARD_ENDPOINT_DESC_SIZE
 0x09

	)

59 c⁄° 
uöt8_t
 
Cu°omHID_Devi˚Des¸ùt‹
[
CUSTOMHID_SIZ_DEVICE_DESC
];

60 c⁄° 
uöt8_t
 
Cu°omHID_C⁄figDes¸ùt‹
[
CUSTOMHID_SIZ_CONFIG_DESC
];

61 c⁄° 
uöt8_t
 
Cu°omHID_Rï‹tDes¸ùt‹
[
CUSTOMHID_SIZ_REPORT_DESC
];

62 c⁄° 
uöt8_t
 
Cu°omHID_SåögL™gID
[
CUSTOMHID_SIZ_STRING_LANGID
];

63 c⁄° 
uöt8_t
 
Cu°omHID_SåögVíd‹
[
CUSTOMHID_SIZ_STRING_VENDOR
];

64 c⁄° 
uöt8_t
 
Cu°omHID_SåögProdu˘
[
CUSTOMHID_SIZ_STRING_PRODUCT
];

65 
uöt8_t
 
Cu°omHID_SåögSîül
[
CUSTOMHID_SIZ_STRING_SERIAL
];

	@inc/usb_istr.h

29 #i‚de‡
__USB_ISTR_H


30 
	#__USB_ISTR_H


	)

33 
	~"usb_c⁄f.h
"

40 
USB_I°r
();

44 
EP1_IN_CÆlback
();

45 
EP2_IN_CÆlback
();

46 
EP3_IN_CÆlback
();

47 
EP4_IN_CÆlback
();

48 
EP5_IN_CÆlback
();

49 
EP6_IN_CÆlback
();

50 
EP7_IN_CÆlback
();

52 
EP1_OUT_CÆlback
();

53 
EP2_OUT_CÆlback
();

54 
EP3_OUT_CÆlback
();

55 
EP4_OUT_CÆlback
();

56 
EP5_OUT_CÆlback
();

57 
EP6_OUT_CÆlback
();

58 
EP7_OUT_CÆlback
();

61 #ifde‡
CTR_CALLBACK


62 
CTR_CÆlback
();

65 #ifde‡
DOVR_CALLBACK


66 
DOVR_CÆlback
();

69 #ifde‡
ERR_CALLBACK


70 
ERR_CÆlback
();

73 #ifde‡
WKUP_CALLBACK


74 
WKUP_CÆlback
();

77 #ifde‡
SUSP_CALLBACK


78 
SUSP_CÆlback
();

81 #ifde‡
RESET_CALLBACK


82 
RESET_CÆlback
();

85 #ifde‡
SOF_CALLBACK


86 
SOF_CÆlback
();

89 #ifde‡
ESOF_CALLBACK


90 
ESOF_CÆlback
();

	@inc/usb_prop.h

30 #i‚de‡
__USB_PROP_H


31 
	#__USB_PROP_H


	)

35 
	e_HID_REQUESTS


37 
	mGET_REPORT
 = 1,

38 
	mGET_IDLE
,

39 
	mGET_PROTOCOL
,

41 
	mSET_REPORT
 = 9,

42 
	mSET_IDLE
,

43 
	mSET_PROTOCOL


44 } 
	tHID_REQUESTS
;

49 
Cu°omHID_öô
();

50 
Cu°omHID_Re£t
();

51 
Cu°omHID_SëC⁄figuøti⁄
();

52 
Cu°omHID_SëDevi˚Addªss
 ();

53 
Cu°omHID_Sètus_In
 ();

54 
Cu°omHID_Sètus_Out
 ();

55 
RESULT
 
Cu°omHID_D©a_Sëup
(
uöt8_t
);

56 
RESULT
 
Cu°omHID_NoD©a_Sëup
(
uöt8_t
);

57 
RESULT
 
Cu°omHID_Gë_I¡îÁ˚_Sëtög
(
uöt8_t
 
I¡îÁ˚
, uöt8_à
A…î«ãSëtög
);

58 
uöt8_t
 *
Cu°omHID_GëDevi˚Des¸ùt‹
(
uöt16_t
 );

59 
uöt8_t
 *
Cu°omHID_GëC⁄figDes¸ùt‹
(
uöt16_t
);

60 
uöt8_t
 *
Cu°omHID_GëSåögDes¸ùt‹
(
uöt16_t
);

61 
RESULT
 
Cu°omHID_SëPrŸocﬁ
();

62 
uöt8_t
 *
Cu°omHID_GëPrŸocﬁVÆue
(
uöt16_t
 
Lígth
);

63 
RESULT
 
Cu°omHID_SëPrŸocﬁ
();

64 
uöt8_t
 *
Cu°omHID_GëRï‹tDes¸ùt‹
(
uöt16_t
 
Lígth
);

65 
uöt8_t
 *
Cu°omHID_GëHIDDes¸ùt‹
(
uöt16_t
 
Lígth
);

69 
	#Cu°omHID_GëC⁄figuøti⁄
 
NOP_Pro˚ss


	)

71 
	#Cu°omHID_GëI¡îÁ˚
 
NOP_Pro˚ss


	)

72 
	#Cu°omHID_SëI¡îÁ˚
 
NOP_Pro˚ss


	)

73 
	#Cu°omHID_GëSètus
 
NOP_Pro˚ss


	)

74 
	#Cu°omHID_CÀ¨Fótuª
 
NOP_Pro˚ss


	)

75 
	#Cu°omHID_SëEndPoötFótuª
 
NOP_Pro˚ss


	)

76 
	#Cu°omHID_SëDevi˚Fótuª
 
NOP_Pro˚ss


	)

79 
	#REPORT_DESCRIPTOR
 0x22

	)

	@inc/usb_pwr.h

29 #i‚de‡
__USB_PWR_H


30 
	#__USB_PWR_H


	)

34 
	e_RESUME_STATE


36 
	mRESUME_EXTERNAL
,

37 
	mRESUME_INTERNAL
,

38 
	mRESUME_LATER
,

39 
	mRESUME_WAIT
,

40 
	mRESUME_START
,

41 
	mRESUME_ON
,

42 
	mRESUME_OFF
,

43 
	mRESUME_ESOF


44 } 
	tRESUME_STATE
;

46 
	e_DEVICE_STATE


48 
	mUNCONNECTED
,

49 
	mATTACHED
,

50 
	mPOWERED
,

51 
	mSUSPENDED
,

52 
	mADDRESSED
,

53 
	mCONFIGURED


54 } 
	tDEVICE_STATE
;

59 
Su•íd
();

60 
Resume_Inô
();

61 
Resume
(
RESUME_STATE
 
eResumeSëVÆ
);

62 
RESULT
 
PowîOn
();

63 
RESULT
 
PowîOff
();

65 
__IO
 
uöt32_t
 
bDevi˚Sèã
;

66 
__IO
 
boﬁ
 
fSu•ídE«bÀd
;

	@src/hw_config.c

30 
	~"hw_c⁄fig.h
"

31 
	~"usb_lib.h
"

32 
	~"usb_desc.h
"

33 
	~"usb_pwr.h
"

40 
Eº‹Sètus
 
	gHSESèπUpSètus
;

41 
uöt32_t
 
	gADC_C⁄vîãdVÆueX
 = 0;

42 
uöt32_t
 
	gADC_C⁄vîãdVÆueX_1
 = 0;

43 
__IO
 
uöt16_t
 
	gADC1C⁄vîãdVÆue
 = 0, 
	gADC1C⁄vîãdVﬁège
 = 0, 
	gˇlibøti⁄_vÆue
 = 0;

47 
I¡ToUnicode
 (
uöt32_t
 
vÆue
 , 
uöt8_t
 *
pbuf
 , uöt8_à
Àn
);

56 
	$Së_Sy°em
()

58 #i‡
	`deföed
 (
STM32F37X
Ë|| deföed (
STM32F30X
)

59 
GPIO_InôTy≥Def
 
GPIO_InôSåu˘uª
;

62 #i‡
	`deföed
(
USB_USE_EXTERNAL_PULLUP
)

63 
GPIO_InôTy≥Def
 
GPIO_InôSåu˘uª
;

73 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
Ë|| deföed (
STM32F37X
Ë|| deföed (
STM32F30X
)

75 
	`RCC_APB2PîùhClockCmd
(
RCC_APB2Pîùh_SYSCFG
, 
ENABLE
);

79 #i‡!
	`deföed
(
STM32L1XX_MD
Ë&& !deföed(
STM32L1XX_HD
Ë&& !deföed(
STM32L1XX_MD_PLUS
Ë&& !deföed(
STM32F37X
Ë&& !deföed(
STM32F30X
)

81 
	`RCC_APB2PîùhClockCmd
(
RCC_APB2Pîùh_GPIO_DISCONNECT
, 
ENABLE
);

84 
	`RCC_ADCCLKC⁄fig
(
RCC_PCLK2_Div8
);

88 
	`GPIO_C⁄figuøti⁄
();

90 #i‡
	`deföed
(
USB_USE_EXTERNAL_PULLUP
)

92 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_GPIO_DISCONNECT
, 
ENABLE
);

95 
GPIO_InôSåu˘uª
.
GPIO_Pö
 = 
USB_DISCONNECT_PIN
;

96 
GPIO_InôSåu˘uª
.
GPIO_Mode
 = 
GPIO_Mode_OUT
;

97 
GPIO_InôSåu˘uª
.
GPIO_S≥ed
 = 
GPIO_S≥ed_2MHz
;

98 
GPIO_InôSåu˘uª
.
GPIO_OTy≥
 = 
GPIO_OTy≥_PP
;

99 
GPIO_InôSåu˘uª
.
GPIO_PuPd
 = 
GPIO_PuPd_NOPULL
;

100 
	`GPIO_Inô
(
USB_DISCONNECT
, &
GPIO_InôSåu˘uª
);

103 #i‡
	`deföed
(
STM32F37X
Ë|| deföed(
STM32F30X
)

106 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_GPIO_DISCONNECT
, 
ENABLE
);

109 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_GPIOA
, 
ENABLE
);

110 
GPIO_InôSåu˘uª
.
GPIO_Pö
 = 
GPIO_Pö_11
 | 
GPIO_Pö_12
;

111 
GPIO_InôSåu˘uª
.
GPIO_S≥ed
 = 
GPIO_S≥ed_50MHz
;

112 
GPIO_InôSåu˘uª
.
GPIO_Mode
 = 
GPIO_Mode_AF
;

113 
GPIO_InôSåu˘uª
.
GPIO_OTy≥
 = 
GPIO_OTy≥_PP
;

114 
GPIO_InôSåu˘uª
.
GPIO_PuPd
 = 
GPIO_PuPd_NOPULL
;

115 
	`GPIO_Inô
(
GPIOA
, &
GPIO_InôSåu˘uª
);

118 
	`GPIO_PöAFC⁄fig
(
GPIOA
, 
GPIO_PöSour˚11
, 
GPIO_AF_14
);

119 
	`GPIO_PöAFC⁄fig
(
GPIOA
, 
GPIO_PöSour˚12
, 
GPIO_AF_14
);

122 
GPIO_InôSåu˘uª
.
GPIO_Pö
 = 
USB_DISCONNECT_PIN
;

123 
GPIO_InôSåu˘uª
.
GPIO_S≥ed
 = 
GPIO_S≥ed_2MHz
;

124 
GPIO_InôSåu˘uª
.
GPIO_Mode
 = 
GPIO_Mode_OUT
;

125 
GPIO_InôSåu˘uª
.
GPIO_OTy≥
 = 
GPIO_OTy≥_OD
;

126 
GPIO_InôSåu˘uª
.
GPIO_PuPd
 = 
GPIO_PuPd_NOPULL
;

127 
	`GPIO_Inô
(
USB_DISCONNECT
, &
GPIO_InôSåu˘uª
);

130 #i‡
	`deföed
(
STM32L1XX_MD
)

132 
	`STM_EVAL_PBInô
(
Buâ⁄_LEFT
, 
Mode_EXTI
);

135 
	`STM_EVAL_PBInô
(
Buâ⁄_RIGHT
, 
Mode_EXTI
);

138 
	`STM_EVAL_PBInô
(
Buâ⁄_KEY
, 
Mode_EXTI
);

139 #i‡!
	`deföed
(
STM32L1XX_HD
)&& !deföed(
STM32L1XX_MD_PLUS
Ë&& !deföed(
STM32F37X
Ë&& !deföed(
STM32F30X
)

141 
	`STM_EVAL_PBInô
(
Buâ⁄_TAMPER
, 
Mode_EXTI
);

145 
	`EXTI_C⁄figuøti⁄
();

148 
	`STM_EVAL_LEDInô
(
LED1
);

149 
	`STM_EVAL_LEDInô
(
LED2
);

150 
	`STM_EVAL_LEDInô
(
LED3
);

151 
	`STM_EVAL_LEDInô
(
LED4
);

153 #i‡
	`deföed
 (
STM32F30X
)

154 
	`ADC30x_C⁄figuøti⁄
();

157 
	`ADC_C⁄figuøti⁄
();

160 
	}
}

169 
	$Së_USBClock
()

171 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

173 
	`RCC_APB1PîùhClockCmd
(
RCC_APB1Pîùh_USB
, 
ENABLE
);

177 
	`RCC_USBCLKC⁄fig
(
RCC_USBCLKSour˚_PLLCLK_1Div5
);

180 
	`RCC_APB1PîùhClockCmd
(
RCC_APB1Pîùh_USB
, 
ENABLE
);

182 
	}
}

191 
	$E¡î_LowPowîMode
()

194 
bDevi˚Sèã
 = 
SUSPENDED
;

195 
	}
}

204 
	$Lóve_LowPowîMode
()

206 
DEVICE_INFO
 *
pInfo
 = &
Devi˚_Info
;

209 i‡(
pInfo
->
Cuºít_C⁄figuøti⁄
 != 0)

212 
bDevi˚Sèã
 = 
CONFIGURED
;

216 
bDevi˚Sèã
 = 
ATTACHED
;

219 
	`Sy°emInô
();

220 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

222 
	`RCC_HSICmd
(
ENABLE
);

224 #i‡
	`deföed
(
STM32F30X
)

225 
	`ADC30x_C⁄figuøti⁄
();

227 
	}
}

236 
	$USB_I¡îru±s_C⁄fig
()

238 
NVIC_InôTy≥Def
 
NVIC_InôSåu˘uª
;

241 
	`NVIC_Pri‹ôyGroupC⁄fig
(
NVIC_Pri‹ôyGroup_2
);

243 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

244 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USB_LP_IRQn
;

245 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 1;

246 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lSubPri‹ôy
 = 0;

247 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

248 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

251 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USB_FS_WKUP_IRQn
;

252 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 0;

253 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

254 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

256 #ñi‡
	`deföed
(
STM32F37X
)

258 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USB_LP_IRQn
;

259 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 1;

260 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lSubPri‹ôy
 = 0;

261 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

262 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

265 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USBWakeUp_IRQn
;

266 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 0;

267 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

268 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

272 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USB_LP_CAN1_RX0_IRQn
;

273 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 1;

274 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lSubPri‹ôy
 = 0;

275 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

276 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

279 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
USBWakeUp_IRQn
;

280 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 0;

281 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lCmd
 = 
ENABLE
;

282 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

286 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
EXTI9_5_IRQn
;

287 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 0;

288 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

291 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
EXTI15_10_IRQn
;

292 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 0;

293 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

296 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√l
 = 
DMA1_Ch™√l1_IRQn
;

297 
NVIC_InôSåu˘uª
.
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
 = 2;

298 
	`NVIC_Inô
(&
NVIC_InôSåu˘uª
);

300 
	}
}

309 
	$USB_CabÀ_C⁄fig
 (
Fun˘i⁄ÆSèã
 
NewSèã
)

311 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed (
STM32L1XX_HD
)|| (
STM32L1XX_MD_PLUS
)

312 i‡(
NewSèã
 !
DISABLE
)

314 
STM32L15_USB_CONNECT
;

318 
STM32L15_USB_DISCONNECT
;

322 i‡(
NewSèã
 !
DISABLE
)

324 
	`GPIO_Re£tBôs
(
USB_DISCONNECT
, 
USB_DISCONNECT_PIN
);

328 
	`GPIO_SëBôs
(
USB_DISCONNECT
, 
USB_DISCONNECT_PIN
);

331 
	}
}

340 
	$GPIO_C⁄figuøti⁄
()

342 
GPIO_InôTy≥Def
 
GPIO_InôSåu˘uª
;

344 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
Ë|| deföed (
STM32F37X
Ë|| deföed (
STM32F30X
)

345 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_GPIO_DISCONNECT
 |

346 
RCC_AHBPîùh_GPIO_IOAIN
 , 
ENABLE
);

348 
	`RCC_APB2PîùhClockCmd
(
RCC_APB2Pîùh_GPIO_DISCONNECT
 |

349 
RCC_APB2Pîùh_GPIO_IOAIN
 , 
ENABLE
);

352 
GPIO_InôSåu˘uª
.
GPIO_Pö
 = 
USB_DISCONNECT_PIN
;

353 
GPIO_InôSåu˘uª
.
GPIO_S≥ed
 = 
GPIO_S≥ed_50MHz
;

354 
GPIO_InôSåu˘uª
.
GPIO_Mode
 = 
GPIO_Mode_Out_OD
;

355 
	`GPIO_Inô
(
USB_DISCONNECT
, &
GPIO_InôSåu˘uª
);

359 
GPIO_InôSåu˘uª
.
GPIO_Pö
 = 
GPIO_IOAIN_PIN
;

360 
GPIO_InôSåu˘uª
.
GPIO_Mode
 = 
GPIO_Mode_AIN
;

361 
	`GPIO_Inô
(
GPIO_IOAIN
, &
GPIO_InôSåu˘uª
);

362 
	}
}

371 
	$EXTI_C⁄figuøti⁄
()

373 
EXTI_InôTy≥Def
 
EXTI_InôSåu˘uª
;

375 #i‡
	`deföed
 (
USE_STM32L152_EVAL
)

377 
EXTI_InôSåu˘uª
.
EXTI_Löe
 = 
RIGHT_BUTTON_EXTI_LINE
;

378 
EXTI_InôSåu˘uª
.
EXTI_Mode
 = 
EXTI_Mode_I¡îru±
;

379 
EXTI_InôSåu˘uª
.
EXTI_Triggî
 = 
EXTI_Triggî_Risög_FÆlög
;

380 
EXTI_InôSåu˘uª
.
EXTI_LöeCmd
 = 
ENABLE
;

381 
	`EXTI_Inô
(&
EXTI_InôSåu˘uª
);

384 
	`EXTI_CÀ¨ITPídögBô
(
RIGHT_BUTTON_EXTI_LINE
);

387 
EXTI_InôSåu˘uª
.
EXTI_Löe
 = 
LEFT_BUTTON_EXTI_LINE
;

388 
	`EXTI_Inô
(&
EXTI_InôSåu˘uª
);

391 
	`EXTI_CÀ¨ITPídögBô
(
LEFT_BUTTON_EXTI_LINE
);

395 
EXTI_InôSåu˘uª
.
EXTI_Löe
 = 
KEY_BUTTON_EXTI_LINE
;

396 
EXTI_InôSåu˘uª
.
EXTI_Mode
 = 
EXTI_Mode_I¡îru±
;

397 
EXTI_InôSåu˘uª
.
EXTI_Triggî
 = 
EXTI_Triggî_Risög_FÆlög
;

398 
EXTI_InôSåu˘uª
.
EXTI_LöeCmd
 = 
ENABLE
;

399 
	`EXTI_Inô
(&
EXTI_InôSåu˘uª
);

402 
	`EXTI_CÀ¨ITPídögBô
(
KEY_BUTTON_EXTI_LINE
);

405 #i‡!
	`deföed
 (
USE_STM32L152D_EVAL
Ë&& !deföed (
STM32F30X
)

406 
EXTI_InôSåu˘uª
.
EXTI_Löe
 = 
TAMPER_BUTTON_EXTI_LINE
;

407 
EXTI_InôSåu˘uª
.
EXTI_Mode
 = 
EXTI_Mode_I¡îru±
;

408 
EXTI_InôSåu˘uª
.
EXTI_Triggî
 = 
EXTI_Triggî_Risög_FÆlög
;

409 
EXTI_InôSåu˘uª
.
EXTI_LöeCmd
 = 
ENABLE
;

410 
	`EXTI_Inô
(&
EXTI_InôSåu˘uª
);

413 
	`EXTI_CÀ¨ITPídögBô
(
TAMPER_BUTTON_EXTI_LINE
);

418 
	`EXTI_CÀ¨ITPídögBô
(
EXTI_Löe18
);

419 
EXTI_InôSåu˘uª
.
EXTI_Löe
 = 
EXTI_Löe18
;

420 
EXTI_InôSåu˘uª
.
EXTI_Triggî
 = 
EXTI_Triggî_Risög
;

421 
EXTI_InôSåu˘uª
.
EXTI_LöeCmd
 = 
ENABLE
;

422 
	`EXTI_Inô
(&
EXTI_InôSåu˘uª
);

423 
	}
}

424 #i‡!
deföed
 (
STM32F30X
)

432 
	$ADC_C⁄figuøti⁄
()

434 
ADC_InôTy≥Def
 
ADC_InôSåu˘uª
;

435 
DMA_InôTy≥Def
 
DMA_InôSåu˘uª
;

437 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_DMA1
, 
ENABLE
);

440 
	`RCC_APB2PîùhClockCmd
(
RCC_APB2Pîùh_ADC1
, 
ENABLE
);

443 
	`DMA_DeInô
(
DMA1_Ch™√l1
);

444 
DMA_InôSåu˘uª
.
DMA_PîùhîÆBa£Addr
 = 
ADC1_DR_Addªss
;

445 
DMA_InôSåu˘uª
.
DMA_Mem‹yBa£Addr
 = (
uöt32_t
)&
ADC_C⁄vîãdVÆueX
;

446 
DMA_InôSåu˘uª
.
DMA_DIR
 = 
DMA_DIR_PîùhîÆSRC
;

447 
DMA_InôSåu˘uª
.
DMA_Buf„rSize
 = 1;

448 
DMA_InôSåu˘uª
.
DMA_PîùhîÆInc
 = 
DMA_PîùhîÆInc_DißbÀ
;

449 
DMA_InôSåu˘uª
.
DMA_Mem‹yInc
 = 
DMA_Mem‹yInc_DißbÀ
;

450 
DMA_InôSåu˘uª
.
DMA_PîùhîÆD©aSize
 = 
DMA_PîùhîÆD©aSize_HÆfW‹d
;

451 
DMA_InôSåu˘uª
.
DMA_Mem‹yD©aSize
 = 
DMA_Mem‹yD©aSize_HÆfW‹d
;

452 
DMA_InôSåu˘uª
.
DMA_Mode
 = 
DMA_Mode_Cúcuœr
;

453 
DMA_InôSåu˘uª
.
DMA_Pri‹ôy
 = 
DMA_Pri‹ôy_High
;

454 
DMA_InôSåu˘uª
.
DMA_M2M
 = 
DMA_M2M_DißbÀ
;

455 
	`DMA_Inô
(
DMA1_Ch™√l1
, &
DMA_InôSåu˘uª
);

458 
	`DMA_Cmd
(
DMA1_Ch™√l1
, 
ENABLE
);

461 
	`DMA_ITC⁄fig
(
DMA1_Ch™√l1
, 
DMA_IT_TC
, 
ENABLE
);

463 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

465 
	`RCC_HSICmd
(
ENABLE
);

468 
	`ADC_Såu˘Inô
(&
ADC_InôSåu˘uª
);

469 
ADC_InôSåu˘uª
.
ADC_SˇnC⁄vMode
 = 
ENABLE
;

470 
ADC_InôSåu˘uª
.
ADC_C⁄töuousC⁄vMode
 = 
ENABLE
;

471 
ADC_InôSåu˘uª
.
ADC_D©aAlign
 = 
ADC_D©aAlign_Right
;

472 
ADC_InôSåu˘uª
.
ADC_NbrOfC⁄vîsi⁄
 = 1;

473 
	`ADC_Inô
(
ADC1
, &
ADC_InôSåu˘uª
);

475 #i‡
	`deföed
 (
USE_STM32L152D_EVAL
)

477 
	`ADC_ReguœrCh™√lC⁄fig
(
ADC1
, 
ADC_Ch™√l_31
, 1, 
ADC_Sam∂eTime_384Cy˛es
);

481 
	`ADC_ReguœrCh™√lC⁄fig
(
ADC1
, 
ADC_Ch™√l_18
, 1, 
ADC_Sam∂eTime_384Cy˛es
);

484 #i‡!
	`deföed
 (
USE_STM32373C_EVAL
)

486 
	`ADC_DMAReque°A·îLa°Tøns„rCmd
(
ADC1
, 
ENABLE
);

489 
	`ADC_DMACmd
(
ADC1
, 
ENABLE
);

492 
	`ADC_Cmd
(
ADC1
, 
ENABLE
);

496 #i‡!
	`deföed
 (
USE_STM32373C_EVAL
)

497 
ADC_InôSåu˘uª
.
ADC_Mode
 = 
ADC_Mode_Indïídít
;

500 
ADC_InôSåu˘uª
.
ADC_SˇnC⁄vMode
 = 
ENABLE
;

501 
ADC_InôSåu˘uª
.
ADC_C⁄töuousC⁄vMode
 = 
ENABLE
;

502 
ADC_InôSåu˘uª
.
ADC_Exã∫ÆTrigC⁄v
 = 
ADC_Exã∫ÆTrigC⁄v_N⁄e
;

503 
ADC_InôSåu˘uª
.
ADC_D©aAlign
 = 
ADC_D©aAlign_Right
;

504 
ADC_InôSåu˘uª
.
ADC_NbrOfCh™√l
 = 1;

505 
	`ADC_Inô
(
ADC1
, &
ADC_InôSåu˘uª
);

508 
	`ADC_ReguœrCh™√lC⁄fig
(
ADC1
, 
ADC_AIN_CHANNEL
, 1, 
ADC_Sam∂eTime_55Cy˛es5
);

511 
	`ADC_DMACmd
(
ADC1
, 
ENABLE
);

514 
	`ADC_Cmd
(
ADC1
, 
ENABLE
);

517 
	`ADC_Re£tCÆibøti⁄
(
ADC1
);

519 
	`ADC_GëRe£tCÆibøti⁄Sètus
(
ADC1
));

521 
	`ADC_SèπCÆibøti⁄
(
ADC1
);

524 
	`ADC_GëCÆibøti⁄Sètus
(
ADC1
));

527 
	}
}

536 
	$Gë_SîülNum
()

538 
uöt32_t
 
Devi˚_Sîül0
, 
Devi˚_Sîül1
, 
Devi˚_Sîül2
;

540 
Devi˚_Sîül0
 = *(
uöt32_t
*)
ID1
;

541 
Devi˚_Sîül1
 = *(
uöt32_t
*)
ID2
;

542 
Devi˚_Sîül2
 = *(
uöt32_t
*)
ID3
;

544 
Devi˚_Sîül0
 +
Devi˚_Sîül2
;

546 i‡(
Devi˚_Sîül0
 != 0)

548 
	`I¡ToUnicode
 (
Devi˚_Sîül0
, &
Cu°omHID_SåögSîül
[2] , 8);

549 
	`I¡ToUnicode
 (
Devi˚_Sîül1
, &
Cu°omHID_SåögSîül
[18], 4);

551 
	}
}

560 
	$I¡ToUnicode
 (
uöt32_t
 
vÆue
 , 
uöt8_t
 *
pbuf
 , uöt8_à
Àn
)

562 
uöt8_t
 
idx
 = 0;

564  
idx
 = 0 ; idx < 
Àn
 ; idx ++)

566 if–((
vÆue
 >> 28)) < 0xA )

568 
pbuf
[ 2* 
idx
] = (
vÆue
 >> 28) + '0';

572 
pbuf
[2* 
idx
] = (
vÆue
 >> 28) + 'A' - 10;

575 
vÆue
 = value << 4;

577 
pbuf
[ 2* 
idx
 + 1] = 0;

579 
	}
}

588 #i‡
deföed
 (
STM32F30X
)

590 
	$ADC30x_C⁄figuøti⁄
()

592 
ADC_InôTy≥Def
 
ADC_InôSåu˘uª
;

593 
ADC_Comm⁄InôTy≥Def
 
ADC_Comm⁄InôSåu˘uª
;

594 
DMA_InôTy≥Def
 
DMA_InôSåu˘uª
;

597 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_DMA1
, 
ENABLE
);

599 
	`DMA_DeInô
(
DMA1_Ch™√l1
);

600 
DMA_InôSåu˘uª
.
DMA_PîùhîÆBa£Addr
 = 
ADC1_DR_Addªss
;

601 
DMA_InôSåu˘uª
.
DMA_Mem‹yBa£Addr
 = (
uöt32_t
)&
ADC_C⁄vîãdVÆueX
;

602 
DMA_InôSåu˘uª
.
DMA_DIR
 = 
DMA_DIR_PîùhîÆSRC
;

603 
DMA_InôSåu˘uª
.
DMA_Buf„rSize
 = 1;

604 
DMA_InôSåu˘uª
.
DMA_PîùhîÆInc
 = 
DMA_PîùhîÆInc_DißbÀ
;

605 
DMA_InôSåu˘uª
.
DMA_Mem‹yInc
 = 
DMA_Mem‹yInc_DißbÀ
;

606 
DMA_InôSåu˘uª
.
DMA_PîùhîÆD©aSize
 = 
DMA_PîùhîÆD©aSize_W‹d
;

607 
DMA_InôSåu˘uª
.
DMA_Mem‹yD©aSize
 = 
DMA_Mem‹yD©aSize_W‹d
;

608 
DMA_InôSåu˘uª
.
DMA_Mode
 = 
DMA_Mode_Cúcuœr
;

609 
DMA_InôSåu˘uª
.
DMA_Pri‹ôy
 = 
DMA_Pri‹ôy_Medium
;

610 
DMA_InôSåu˘uª
.
DMA_M2M
 = 
DMA_M2M_DißbÀ
;

611 
	`DMA_Inô
(
DMA1_Ch™√l1
, &
DMA_InôSåu˘uª
);

614 
	`DMA_Cmd
(
DMA1_Ch™√l1
, 
ENABLE
);

617 
	`DMA_ITC⁄fig
(
DMA1_Ch™√l1
, 
DMA_IT_TC
, 
ENABLE
);

620 
	`RCC_ADCCLKC⁄fig
(
RCC_ADC12PLLCLK_Div2
);

623 
	`RCC_AHBPîùhClockCmd
(
RCC_AHBPîùh_ADC12
, 
ENABLE
);

624 
	`ADC_DeInô
(
ADC1
);

625 
	`ADC_Såu˘Inô
(&
ADC_InôSåu˘uª
);

628 
	`ADC_VﬁègeReguœt‹Cmd
(
ADC1
, 
ENABLE
);

629 
	`ADC_Sñe˘CÆibøti⁄Mode
(
ADC1
, 
ADC_CÆibøti⁄Mode_SögÀ
);

630 
	`ADC_SèπCÆibøti⁄
(
ADC1
);

632 
	`ADC_GëCÆibøti⁄Sètus
(
ADC1
Ë!
RESET
 );

633 
ˇlibøti⁄_vÆue
 = 
	`ADC_GëCÆibøti⁄VÆue
(
ADC1
);

636 
ADC_Comm⁄InôSåu˘uª
.
ADC_Mode
 = 
ADC_Mode_Indïídít
;

637 
ADC_Comm⁄InôSåu˘uª
.
ADC_Clock
 = 
ADC_Clock_AsynClkMode
;

638 
ADC_Comm⁄InôSåu˘uª
.
ADC_DMAAc˚ssMode
 = 
ADC_DMAAc˚ssMode_DißbÀd
;

639 
ADC_Comm⁄InôSåu˘uª
.
ADC_DMAMode
 = 
ADC_DMAMode_O√ShŸ
;

640 
ADC_Comm⁄InôSåu˘uª
.
ADC_TwoSam∂ögDñay
 = 0;

641 
	`ADC_Comm⁄Inô
(
ADC1
, &
ADC_Comm⁄InôSåu˘uª
);

644 
	`ADC_DMACmd
(
ADC1
, 
ENABLE
);

645 
	`ADC_DMAC⁄fig
(
ADC1
, 
ADC_DMAMode_Cúcuœr
);

647 
ADC_InôSåu˘uª
.
ADC_C⁄töuousC⁄vMode
 = 
ADC_C⁄töuousC⁄vMode_E«bÀ
;

648 
ADC_InôSåu˘uª
.
ADC_Resﬁuti⁄
 = 
ADC_Resﬁuti⁄_12b
;

649 
ADC_InôSåu˘uª
.
ADC_Exã∫ÆTrigC⁄vEvít
 = 
ADC_Exã∫ÆTrigC⁄vEvít_0
;

650 
ADC_InôSåu˘uª
.
ADC_Exã∫ÆTrigEvítEdge
 = 
ADC_Exã∫ÆTrigEvítEdge_N⁄e
;

651 
ADC_InôSåu˘uª
.
ADC_D©aAlign
 = 
ADC_D©aAlign_Right
;

652 
ADC_InôSåu˘uª
.
ADC_OvîrunMode
 = 
ADC_OvîrunMode_DißbÀ
;

653 
ADC_InôSåu˘uª
.
ADC_AutoInjMode
 = 
ADC_AutoInjec_DißbÀ
;

654 
ADC_InôSåu˘uª
.
ADC_NbrOfRegCh™√l
 = 1;

655 
	`ADC_Inô
(
ADC1
, &
ADC_InôSåu˘uª
);

658 
	`ADC_ReguœrCh™√lC⁄fig
(
ADC1
, 
ADC_Ch™√l_7
, 1, 
ADC_Sam∂eTime_7Cy˛es5
);

661 
	`ADC_Cmd
(
ADC1
, 
ENABLE
);

664 !
	`ADC_GëFœgSètus
(
ADC1
, 
ADC_FLAG_RDY
));

667 
	`ADC_SèπC⁄vîsi⁄
(
ADC1
);

670 
	`ADC_GëFœgSètus
(
ADC1
, 
ADC_FLAG_EOC
Ë=
RESET
);

673 
ADC_C⁄vîãdVÆueX
 =
	`ADC_GëC⁄vîsi⁄VÆue
(
ADC1
);

674 
	}
}

	@src/main.c

30 
	~"hw_c⁄fig.h
"

31 
	~"usb_lib.h
"

32 
	~"usb_pwr.h
"

39 
__IO
 
uöt8_t
 
	gPªvX„rCom∂ëe
 = 1;

40 
__IO
 
uöt32_t
 
	gTimögDñay
 = 0;

42 
Dñay
(
__IO
 
uöt32_t
 
nCou¡
);

53 
	$maö
()

55 
	`Së_Sy°em
();

57 
	`USB_I¡îru±s_C⁄fig
();

59 
	`Së_USBClock
();

61 
	`USB_Inô
();

66 
	}
}

75 
	$Dñay
(
__IO
 
uöt32_t
 
nCou¡
)

77 
TimögDñay
 = 
nCou¡
;

78 ; 
nCou¡
!= 0;nCount--);

79 
	}
}

81 #ifde‡ 
USE_FULL_ASSERT


91 
	$as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
)

100 
	}
}

	@src/stm32_it.c

33 
	~"°m32_ô.h
"

34 
	~"usb_i°r.h
"

35 
	~"usb_lib.h
"

36 
	~"usb_pwr.h
"

37 
	~"hw_c⁄fig.h
"

43 
__IO
 
uöt8_t
 
	gSíd_Buf„r
[2];

44 
__IO
 
uöt8_t
 
PªvX„rCom∂ëe
;

45 
uöt32_t
 
ADC_C⁄vîãdVÆueX
;

46 
uöt32_t
 
ADC_C⁄vîãdVÆueX_1
;

47 
__IO
 
uöt32_t
 
TimögDñay
;

63 
	$NMI_H™dÀr
()

65 
	}
}

74 
	$H¨dFau…_H™dÀr
()

80 
	}
}

89 
	$MemM™age_H™dÀr
()

95 
	}
}

104 
	$BusFau…_H™dÀr
()

110 
	}
}

119 
	$UßgeFau…_H™dÀr
()

125 
	}
}

134 
	$SVC_H™dÀr
()

136 
	}
}

145 
	$DebugM⁄_H™dÀr
()

147 
	}
}

156 
	$PídSV_H™dÀr
()

158 
	}
}

167 
	$SysTick_H™dÀr
()

169 
TimögDñay
--;

170 
	}
}

184 #i‡
deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
Ë|| deföed (
STM32F37X
)

185 
	$USB_LP_IRQH™dÀr
()

187 
	$USB_LP_CAN1_RX0_IRQH™dÀr
()

190 
	`USB_I°r
();

191 
	}
}

193 #i‡
deföed
(
STM32L1XX_MD
)

201 
	$EXTI15_10_IRQH™dÀr
()

204 if(
	`EXTI_GëITSètus
(
RIGHT_BUTTON_EXTI_LINE
Ë!
RESET
)

206 i‡((
PªvX„rCom∂ëe
Ë&& (
bDevi˚Sèã
 =
CONFIGURED
))

208 
Síd_Buf„r
[0] = 0x05;

210 i‡(
	`STM_EVAL_PBGëSèã
(
Buâ⁄_RIGHT
Ë=
Bô_RESET
)

212 
Síd_Buf„r
[1] = 0x01;

216 
Síd_Buf„r
[1] = 0x00;

220 
	`USB_SIL_Wrôe
(
EP1_IN
, (
uöt8_t
*Ë
Síd_Buf„r
, 2);

222 
	`SëEPTxVÆid
(
ENDP1
);

224 
PªvX„rCom∂ëe
 = 0;

227 
	`EXTI_CÀ¨ITPídögBô
(
RIGHT_BUTTON_EXTI_LINE
);

231 if(
	`EXTI_GëITSètus
(
LEFT_BUTTON_EXTI_LINE
Ë!
RESET
)

233 i‡((
PªvX„rCom∂ëe
Ë&& (
bDevi˚Sèã
 =
CONFIGURED
))

235 
Síd_Buf„r
[0] = 0x06;

237 i‡(
	`STM_EVAL_PBGëSèã
(
Buâ⁄_LEFT
Ë=
Bô_RESET
)

239 
Síd_Buf„r
[1] = 0x01;

243 
Síd_Buf„r
[1] = 0x00;

247 
	`USB_SIL_Wrôe
(
EP1_IN
, (
uöt8_t
*Ë
Síd_Buf„r
, 2);

249 
	`SëEPTxVÆid
(
ENDP1
);

251 
PªvX„rCom∂ëe
 = 0;

254 
	`EXTI_CÀ¨ITPídögBô
(
LEFT_BUTTON_EXTI_LINE
);

256 
	}
}

265 
	$DMA1_Ch™√l1_IRQH™dÀr
()

267 
Síd_Buf„r
[0] = 0x07;

269 if((
ADC_C⁄vîãdVÆueX
 >>4Ë- (
ADC_C⁄vîãdVÆueX_1
 >>4) > 4)

271 i‡((
PªvX„rCom∂ëe
Ë&& (
bDevi˚Sèã
 =
CONFIGURED
))

273 
Síd_Buf„r
[1] = (
uöt8_t
)(
ADC_C⁄vîãdVÆueX
 >>4);

276 
	`USB_SIL_Wrôe
(
EP1_IN
, (
uöt8_t
*Ë
Síd_Buf„r
, 2);

277 
	`SëEPTxVÆid
(
ENDP1
);

278 
ADC_C⁄vîãdVÆueX_1
 = 
ADC_C⁄vîãdVÆueX
;

279 
PªvX„rCom∂ëe
 = 0;

283 
	`DMA_CÀ¨Fœg
(
DMA1_FLAG_TC1
);

284 
	}
}

293 #i‡
deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

294 
	$EXTI0_IRQH™dÀr
()

295 #ñi‡
	`deföed
 (
STM32F37X
)

296 
	$EXTI2_TS_IRQH™dÀr
()

298 
	$EXTI9_5_IRQH™dÀr
()

301 if(
	`EXTI_GëITSètus
(
KEY_BUTTON_EXTI_LINE
Ë!
RESET
)

303 i‡((
PªvX„rCom∂ëe
Ë&& (
bDevi˚Sèã
 =
CONFIGURED
))

305 
Síd_Buf„r
[0] = 0x05;

306 #i‡
	`deföed
(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

307 i‡(!
	`STM_EVAL_PBGëSèã
(
Buâ⁄_KEY
Ë=
Bô_RESET
)

309 i‡(
	`STM_EVAL_PBGëSèã
(
Buâ⁄_KEY
Ë=
Bô_RESET
)

312 
Síd_Buf„r
[1] = 0x01;

316 
Síd_Buf„r
[1] = 0x00;

320 
	`USB_SIL_Wrôe
(
EP1_IN
, (
uöt8_t
*Ë
Síd_Buf„r
, 2);

321 
	`SëEPTxVÆid
(
ENDP1
);

322 
PªvX„rCom∂ëe
 = 0;

325 
	`EXTI_CÀ¨ITPídögBô
(
KEY_BUTTON_EXTI_LINE
);

327 
	}
}

328 #i‡!
deföed
(
STM32L1XX_MD
Ë&& !deföed(
STM32L1XX_HD
Ë&& !deföed(
STM32L1XX_MD_PLUS
)&& ! deföed (
STM32F37X
Ë&& ! deföed (
STM32F30X
)

336 
	$EXTI15_10_IRQH™dÀr
()

338 if(
	`EXTI_GëITSètus
(
TAMPER_BUTTON_EXTI_LINE
Ë!
RESET
)

340 i‡((
PªvX„rCom∂ëe
Ë&& (
bDevi˚Sèã
 =
CONFIGURED
))

342 
Síd_Buf„r
[0] = 0x06;

344 i‡(
	`STM_EVAL_PBGëSèã
(
Buâ⁄_TAMPER
Ë=
Bô_RESET
)

346 
Síd_Buf„r
[1] = 0x01;

350 
Síd_Buf„r
[1] = 0x00;

354 
	`USB_SIL_Wrôe
(
EP1_IN
, (
uöt8_t
*Ë
Síd_Buf„r
, 2);

356 
	`SëEPTxVÆid
(
ENDP1
);

358 
PªvX„rCom∂ëe
 = 0;

361 
	`EXTI_CÀ¨ITPídögBô
(
TAMPER_BUTTON_EXTI_LINE
);

363 
	}
}

375 #i‡
deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)

376 
	$USB_FS_WKUP_IRQH™dÀr
()

378 
	$USBWakeUp_IRQH™dÀr
()

381 
	`EXTI_CÀ¨ITPídögBô
(
EXTI_Löe18
);

382 
	}
}

	@src/system_stm32f10x.c

71 
	~"°m32f10x.h
"

112 #i‡
deföed
 (
STM32F10X_LD_VL
Ë|| (deföed 
STM32F10X_MD_VL
Ë|| (deföed 
STM32F10X_HD_VL
)

114 
	#SYSCLK_FREQ_24MHz
 24000000

	)

121 
	#SYSCLK_FREQ_72MHz
 72000000

	)

127 #i‡
deföed
 (
STM32F10X_HD
Ë|| (deföed 
STM32F10X_XL
Ë|| (deföed 
STM32F10X_HD_VL
)

134 
	#VECT_TAB_OFFSET
 0x0

	)

157 #ifde‡
SYSCLK_FREQ_HSE


158 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_HSE
;

159 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


160 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_24MHz
;

161 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


162 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_36MHz
;

163 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


164 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_48MHz
;

165 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


166 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_56MHz
;

167 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


168 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_72MHz
;

170 
uöt32_t
 
	gSy°emC‹eClock
 = 
HSI_VALUE
;

173 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

182 
SëSysClock
();

184 #ifde‡
SYSCLK_FREQ_HSE


185 
SëSysClockToHSE
();

186 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


187 
SëSysClockTo24
();

188 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


189 
SëSysClockTo36
();

190 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


191 
SëSysClockTo48
();

192 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


193 
SëSysClockTo56
();

194 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


195 
SëSysClockTo72
();

198 #ifde‡
DATA_IN_ExtSRAM


199 
Sy°emInô_ExtMemCé
();

218 
	$Sy°emInô
 ()

222 
RCC
->
CR
 |(
uöt32_t
)0x00000001;

226 
RCC
->
CFGR
 &(
uöt32_t
)0xF8FF0000;

229 
RCC
->
CR
 &(
uöt32_t
)0xFEF6FFFF;

232 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

235 
RCC
->
CFGR
 &(
uöt32_t
)0xFF80FFFF;

237 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

239 
RCC
->
CIR
 = 0x009F0000;

242 
RCC
->
CFGR2
 = 0x00000000;

245 
RCC
->
CIR
 = 0x009F0000;

248 #i‡
	`deföed
 (
STM32F10X_HD
Ë|| (
deföed
 
STM32F10X_XL
Ë|| (deföed 
STM32F10X_HD_VL
)

249 #ifde‡
DATA_IN_ExtSRAM


250 
	`Sy°emInô_ExtMemCé
();

256 
	`SëSysClock
();

258 #ifde‡
VECT_TAB_SRAM


259 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

261 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

263 
	}
}

300 
	$Sy°emC‹eClockUpd©e
 ()

302 
uöt32_t
 
tmp
 = 0, 
∂lmuŒ
 = 0, 
∂lsour˚
 = 0;

304 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

305 
uöt32_t
 
¥ediv1Á˘‹
 = 0;

309 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

311 
tmp
)

314 
Sy°emC‹eClock
 = 
HSI_VALUE
;

317 
Sy°emC‹eClock
 = 
HSE_VALUE
;

322 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

323 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

325 
∂lmuŒ
 = (Öllmull >> 18) + 2;

327 i‡(
∂lsour˚
 == 0x00)

330 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

334 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

335 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

337 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

340 i‡((
RCC
->
CFGR
 & 
RCC_CFGR_PLLXTPRE
Ë!(
uöt32_t
)
RESET
)

342 
Sy°emC‹eClock
 = (
HSE_VALUE
 >> 1Ë* 
∂lmuŒ
;

346 
Sy°emC‹eClock
 = 
HSE_VALUE
 * 
∂lmuŒ
;

354 
Sy°emC‹eClock
 = 
HSI_VALUE
;

360 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

362 
Sy°emC‹eClock
 >>
tmp
;

363 
	}
}

370 
	$SëSysClock
()

372 #ifde‡
SYSCLK_FREQ_HSE


373 
	`SëSysClockToHSE
();

374 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


375 
	`SëSysClockTo24
();

376 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


377 
	`SëSysClockTo36
();

378 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


379 
	`SëSysClockTo48
();

380 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


381 
	`SëSysClockTo56
();

382 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


383 
	`SëSysClockTo72
();

388 
	}
}

396 #ifde‡
DATA_IN_ExtSRAM


406 
	$Sy°emInô_ExtMemCé
()

412 
RCC
->
AHBENR
 = 0x00000114;

415 
RCC
->
APB2ENR
 = 0x000001E0;

423 
GPIOD
->
CRL
 = 0x44BB44BB;

424 
GPIOD
->
CRH
 = 0xBBBBBBBB;

426 
GPIOE
->
CRL
 = 0xB44444BB;

427 
GPIOE
->
CRH
 = 0xBBBBBBBB;

429 
GPIOF
->
CRL
 = 0x44BBBBBB;

430 
GPIOF
->
CRH
 = 0xBBBB4444;

432 
GPIOG
->
CRL
 = 0x44BBBBBB;

433 
GPIOG
->
CRH
 = 0x44444B44;

438 
FSMC_B™k1
->
BTCR
[4] = 0x00001011;

439 
FSMC_B™k1
->
BTCR
[5] = 0x00000200;

440 
	}
}

443 #ifde‡
SYSCLK_FREQ_HSE


451 
	$SëSysClockToHSE
()

453 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

457 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

462 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

463 
SèπUpCou¡î
++;

464 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

466 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

468 
HSESètus
 = (
uöt32_t
)0x01;

472 
HSESètus
 = (
uöt32_t
)0x00;

475 i‡(
HSESètus
 =(
uöt32_t
)0x01)

478 #i‡!
deföed
 
STM32F10X_LD_VL
 && !deföed 
STM32F10X_MD_VL
 && !deföed 
STM32F10X_HD_VL


480 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

483 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

485 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

489 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

492 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

495 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

498 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

499 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_HSE
;

502 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x04)

510 
	}
}

511 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


519 
	$SëSysClockTo24
()

521 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

525 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

530 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

531 
SèπUpCou¡î
++;

532 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

534 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

536 
HSESètus
 = (
uöt32_t
)0x01;

540 
HSESètus
 = (
uöt32_t
)0x00;

543 i‡(
HSESètus
 =(
uöt32_t
)0x01)

545 #i‡!
deföed
 
STM32F10X_LD_VL
 && !deföed 
STM32F10X_MD_VL
 && !deföed 
STM32F10X_HD_VL


547 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

550 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

551 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

555 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

558 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

561 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

563 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| deföed (
STM32F10X_HD_VL
)

565 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

566 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_PREDIV1
 | 
RCC_CFGR_PLLXTPRE_PREDIV1_Div2
 | 
RCC_CFGR_PLLMULL6
);

569 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

570 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLXTPRE_HSE_Div2
 | 
RCC_CFGR_PLLMULL6
);

574 
RCC
->
CR
 |
RCC_CR_PLLON
;

577 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

582 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

583 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

586 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

594 
	}
}

595 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


603 
	$SëSysClockTo36
()

605 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

609 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

614 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

615 
SèπUpCou¡î
++;

616 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

618 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

620 
HSESètus
 = (
uöt32_t
)0x01;

624 
HSESètus
 = (
uöt32_t
)0x00;

627 i‡(
HSESètus
 =(
uöt32_t
)0x01)

630 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

633 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

634 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

637 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

640 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

643 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

646 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

647 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLXTPRE_HSE_Div2
 | 
RCC_CFGR_PLLMULL9
);

650 
RCC
->
CR
 |
RCC_CR_PLLON
;

653 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

658 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

659 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

662 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

670 
	}
}

671 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


679 
	$SëSysClockTo48
()

681 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

685 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

690 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

691 
SèπUpCou¡î
++;

692 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

694 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

696 
HSESètus
 = (
uöt32_t
)0x01;

700 
HSESètus
 = (
uöt32_t
)0x00;

703 i‡(
HSESètus
 =(
uöt32_t
)0x01)

706 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

709 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

710 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

713 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

716 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

719 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

722 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

723 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL6
);

726 
RCC
->
CR
 |
RCC_CR_PLLON
;

729 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

734 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

735 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

738 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

746 
	}
}

748 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


756 
	$SëSysClockTo56
()

758 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

762 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

767 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

768 
SèπUpCou¡î
++;

769 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

771 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

773 
HSESètus
 = (
uöt32_t
)0x01;

777 
HSESètus
 = (
uöt32_t
)0x00;

780 i‡(
HSESètus
 =(
uöt32_t
)0x01)

783 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

786 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

787 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_2
;

790 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

793 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

796 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

800 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

801 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL7
);

804 
RCC
->
CR
 |
RCC_CR_PLLON
;

807 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

812 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

813 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

816 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

824 
	}
}

826 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


834 
	$SëSysClockTo72
()

836 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

840 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

845 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

846 
SèπUpCou¡î
++;

847 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

849 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

851 
HSESètus
 = (
uöt32_t
)0x01;

855 
HSESètus
 = (
uöt32_t
)0x00;

858 i‡(
HSESètus
 =(
uöt32_t
)0x01)

861 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

864 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

865 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_2
;

869 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

872 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

875 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

878 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 |

879 
RCC_CFGR_PLLMULL
));

880 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL9
);

883 
RCC
->
CR
 |
RCC_CR_PLLON
;

886 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

891 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

892 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

895 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

903 
	}
}

	@src/system_stm32f30x.c

102 
	~"°m32f30x.h
"

122 
	#VECT_TAB_OFFSET
 0x0

	)

140 
uöt32_t
 
	gSy°emC‹eClock
 = 72000000;

142 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

152 
SëSysClock
();

169 
	$Sy°emInô
()

172 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

173 
SCB
->
CPACR
 |= ((3UL << 10*2)|(3UL << 11*2));

178 
RCC
->
CR
 |(
uöt32_t
)0x00000001;

181 
RCC
->
CFGR
 &= 0xF87FC00C;

184 
RCC
->
CR
 &(
uöt32_t
)0xFEF6FFFF;

187 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

190 
RCC
->
CFGR
 &(
uöt32_t
)0xFF80FFFF;

193 
RCC
->
CFGR2
 &(
uöt32_t
)0xFFFFFFF0;

196 
RCC
->
CFGR3
 &(
uöt32_t
)0xFF00FCCC;

199 
RCC
->
CIR
 = 0x00000000;

203 
	`SëSysClock
();

205 #ifde‡
VECT_TAB_SRAM


206 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

208 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

210 
	}
}

248 
	$Sy°emC‹eClockUpd©e
 ()

250 
uöt32_t
 
tmp
 = 0, 
∂lmuŒ
 = 0, 
∂lsour˚
 = 0, 
¥ediv1Á˘‹
 = 0;

253 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

255 
tmp
)

258 
Sy°emC‹eClock
 = 
HSI_VALUE
;

261 
Sy°emC‹eClock
 = 
HSE_VALUE
;

265 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

266 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

267 
∂lmuŒ
 = (Öllmull >> 18) + 2;

269 i‡(
∂lsour˚
 == 0x00)

272 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

276 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

278 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

282 
Sy°emC‹eClock
 = 
HSI_VALUE
;

287 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

289 
Sy°emC‹eClock
 >>
tmp
;

290 
	}
}

300 
	$SëSysClock
()

302 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

310 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

315 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

316 
SèπUpCou¡î
++;

317 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

319 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

321 
HSESètus
 = (
uöt32_t
)0x01;

325 
HSESètus
 = (
uöt32_t
)0x00;

328 i‡(
HSESètus
 =(
uöt32_t
)0x01)

331 
FLASH
->
ACR
 = 
FLASH_ACR_PRFTBE
 | (
uöt32_t
)
FLASH_ACR_LATENCY_1
;

334 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

337 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

340 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

343 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

344 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_PREDIV1
 | 
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLMULL9
);

347 
RCC
->
CR
 |
RCC_CR_PLLON
;

350 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

355 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

356 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

359 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
Ë!(uöt32_t)
RCC_CFGR_SWS_PLL
)

367 
	}
}

	@src/system_stm32f37x.c

103 
	~"°m32f37x.h
"

124 
	#VECT_TAB_OFFSET
 0x0

	)

141 
uöt32_t
 
	gSy°emC‹eClock
 = 72000000;

142 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

152 
SëSysClock
();

169 
	$Sy°emInô
 ()

172 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

173 
SCB
->
CPACR
 |= ((3UL << 10*2)|(3UL << 11*2));

177 
RCC
->
CR
 |(
uöt32_t
)0x00000001;

180 
RCC
->
CFGR
 &(
uöt32_t
)0x00FF0000;

183 
RCC
->
CR
 &(
uöt32_t
)0xFEF6FFFF;

186 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

189 
RCC
->
CFGR
 &(
uöt32_t
)0xFF80FFFF;

192 
RCC
->
CFGR2
 &(
uöt32_t
)0xFFFFFFF0;

195 
RCC
->
CFGR3
 &(
uöt32_t
)0xFFF0F8C;

198 
RCC
->
CIR
 = 0x00000000;

201 
	`SëSysClock
();

204 #ifde‡
VECT_TAB_SRAM


205 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

207 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

209 
	}
}

246 
	$Sy°emC‹eClockUpd©e
 ()

248 
uöt32_t
 
tmp
 = 0, 
∂lmuŒ
 = 0, 
∂lsour˚
 = 0, 
¥ediv1Á˘‹
 = 0;

251 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

253 
tmp
)

256 
Sy°emC‹eClock
 = 
HSI_VALUE
;

259 
Sy°emC‹eClock
 = 
HSE_VALUE
;

263 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

264 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

265 
∂lmuŒ
 = (Öllmull >> 18) + 2;

267 i‡(
∂lsour˚
 == 0x00)

270 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

274 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

276 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

280 
Sy°emC‹eClock
 = 
HSI_VALUE
;

285 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

287 
Sy°emC‹eClock
 >>
tmp
;

288 
	}
}

298 
	$SëSysClock
()

300 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

308 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

313 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

314 
SèπUpCou¡î
++;

315 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

317 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

319 
HSESètus
 = (
uöt32_t
)0x01;

323 
HSESètus
 = (
uöt32_t
)0x00;

326 i‡(
HSESètus
 =(
uöt32_t
)0x01)

329 
FLASH
->
ACR
 = 
FLASH_ACR_PRFTBE
 | (
uöt32_t
)
FLASH_ACR_LATENCY_1
;

332 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

335 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

338 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

341 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

342 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_PREDIV1
 | 
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLMULL9
);

345 
RCC
->
CR
 |
RCC_CR_PLLON
;

348 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

353 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

354 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

357 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
Ë!(uöt32_t)
RCC_CFGR_SWS_PLL
)

365 
	}
}

	@src/system_stm32l1xx.c

107 
	~"°m32l1xx.h
"

132 
	#VECT_TAB_OFFSET
 0x0

	)

149 
uöt32_t
 
	gSy°emC‹eClock
 = 32000000;

150 
__I
 
uöt8_t
 
	gPLLMulTabÀ
[9] = {3, 4, 6, 8, 12, 16, 24, 32, 48};

151 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

161 
SëSysClock
();

162 #ifde‡
DATA_IN_ExtSRAM


163 
Sy°emInô_ExtMemCé
();

181 
	$Sy°emInô
 ()

184 
RCC
->
CR
 |(
uöt32_t
)0x00000100;

187 
RCC
->
CFGR
 &(
uöt32_t
)0x88FFC00C;

190 
RCC
->
CR
 &(
uöt32_t
)0xEEFEFFFE;

193 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

196 
RCC
->
CFGR
 &(
uöt32_t
)0xFF02FFFF;

199 
RCC
->
CIR
 = 0x00000000;

201 #ifde‡
DATA_IN_ExtSRAM


202 
	`Sy°emInô_ExtMemCé
();

206 
	`SëSysClock
();

208 #ifde‡
VECT_TAB_SRAM


209 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

211 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

213 
	}
}

253 
	$Sy°emC‹eClockUpd©e
 ()

255 
uöt32_t
 
tmp
 = 0, 
∂lmul
 = 0, 
∂ldiv
 = 0, 
∂lsour˚
 = 0, 
msú™ge
 = 0;

258 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

260 
tmp
)

263 
msú™ge
 = (
RCC
->
ICSCR
 & 
RCC_ICSCR_MSIRANGE
) >> 13;

264 
Sy°emC‹eClock
 = (32768 * (1 << (
msú™ge
 + 1)));

267 
Sy°emC‹eClock
 = 
HSI_VALUE
;

270 
Sy°emC‹eClock
 = 
HSE_VALUE
;

274 
∂lmul
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMUL
;

275 
∂ldiv
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLDIV
;

276 
∂lmul
 = 
PLLMulTabÀ
[(pllmul >> 18)];

277 
∂ldiv
 = (plldiv >> 22) + 1;

279 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

281 i‡(
∂lsour˚
 == 0x00)

284 
Sy°emC‹eClock
 = (((
HSI_VALUE
Ë* 
∂lmul
Ë/ 
∂ldiv
);

289 
Sy°emC‹eClock
 = (((
HSE_VALUE
Ë* 
∂lmul
Ë/ 
∂ldiv
);

293 
msú™ge
 = (
RCC
->
ICSCR
 & 
RCC_ICSCR_MSIRANGE
) >> 13;

294 
Sy°emC‹eClock
 = (32768 * (1 << (
msú™ge
 + 1)));

299 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

301 
Sy°emC‹eClock
 >>
tmp
;

302 
	}
}

312 
	$SëSysClock
()

314 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

318 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

323 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

324 
SèπUpCou¡î
++;

325 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

327 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

329 
HSESètus
 = (
uöt32_t
)0x01;

333 
HSESètus
 = (
uöt32_t
)0x00;

336 i‡(
HSESètus
 =(
uöt32_t
)0x01)

339 
FLASH
->
ACR
 |
FLASH_ACR_ACC64
;

342 
FLASH
->
ACR
 |
FLASH_ACR_PRFTEN
;

345 
FLASH
->
ACR
 |
FLASH_ACR_LATENCY
;

348 
RCC
->
APB1ENR
 |
RCC_APB1ENR_PWREN
;

351 
PWR
->
CR
 = 
PWR_CR_VOS_0
;

354 (
PWR
->
CSR
 & 
PWR_CSR_VOSF
Ë!
RESET
)

359 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

362 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

365 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

368 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMUL
 |

369 
RCC_CFGR_PLLDIV
));

370 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMUL12
 | 
RCC_CFGR_PLLDIV3
);

373 
RCC
->
CR
 |
RCC_CR_PLLON
;

376 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

381 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

382 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

385 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
Ë!(uöt32_t)
RCC_CFGR_SWS_PLL
)

394 
	}
}

396 #ifde‡
DATA_IN_ExtSRAM


405 
	$Sy°emInô_ExtMemCé
()

428 
RCC
->
AHBENR
 = 0x000080D8;

431 
GPIOD
->
AFR
[0] = 0x00CC00CC;

432 
GPIOD
->
AFR
[1] = 0xCCCCCCCC;

434 
GPIOD
->
MODER
 = 0xAAAA0A0A;

436 
GPIOD
->
OSPEEDR
 = 0xFFFF0F0F;

438 
GPIOD
->
OTYPER
 = 0x00000000;

440 
GPIOD
->
PUPDR
 = 0x00000000;

443 
GPIOE
->
AFR
[0] = 0xC00000CC;

444 
GPIOE
->
AFR
[1] = 0xCCCCCCCC;

446 
GPIOE
->
MODER
 = 0xAAAA800A;

448 
GPIOE
->
OSPEEDR
 = 0xFFFFC00F;

450 
GPIOE
->
OTYPER
 = 0x00000000;

452 
GPIOE
->
PUPDR
 = 0x00000000;

455 
GPIOF
->
AFR
[0] = 0x00CCCCCC;

456 
GPIOF
->
AFR
[1] = 0xCCCC0000;

458 
GPIOF
->
MODER
 = 0xAA000AAA;

460 
GPIOF
->
OSPEEDR
 = 0xFF000FFF;

462 
GPIOF
->
OTYPER
 = 0x00000000;

464 
GPIOF
->
PUPDR
 = 0x00000000;

467 
GPIOG
->
AFR
[0] = 0x00CCCCCC;

468 
GPIOG
->
AFR
[1] = 0x00000C00;

470 
GPIOG
->
MODER
 = 0x00200AAA;

472 
GPIOG
->
OSPEEDR
 = 0x00300FFF;

474 
GPIOG
->
OTYPER
 = 0x00000000;

476 
GPIOG
->
PUPDR
 = 0x00000000;

480 
RCC
->
AHBENR
 = 0x400080D8;

483 
FSMC_B™k1
->
BTCR
[4] = 0x00001011;

484 
FSMC_B™k1
->
BTCR
[5] = 0x00000300;

485 
FSMC_B™k1E
->
BWTR
[4] = 0x0FFFFFFF;

518 
	}
}

	@src/usb_desc.c

30 
	~"usb_lib.h
"

31 
	~"usb_desc.h
"

42 c⁄° 
uöt8_t
 
	gCu°omHID_Devi˚Des¸ùt‹
[
CUSTOMHID_SIZ_DEVICE_DESC
] =

45 
USB_DEVICE_DESCRIPTOR_TYPE
,

71 c⁄° 
uöt8_t
 
	gCu°omHID_C⁄figDes¸ùt‹
[
CUSTOMHID_SIZ_CONFIG_DESC
] =

74 
USB_CONFIGURATION_DESCRIPTOR_TYPE
,

75 
CUSTOMHID_SIZ_CONFIG_DESC
,

88 
USB_INTERFACE_DESCRIPTOR_TYPE
,

99 
HID_DESCRIPTOR_TYPE
,

105 
CUSTOMHID_SIZ_REPORT_DESC
,

110 
USB_ENDPOINT_DESCRIPTOR_TYPE
,

120 
USB_ENDPOINT_DESCRIPTOR_TYPE
,

131 c⁄° 
uöt8_t
 
	gCu°omHID_Rï‹tDes¸ùt‹
[
CUSTOMHID_SIZ_REPORT_DESC
] =

250 c⁄° 
uöt8_t
 
	gCu°omHID_SåögL™gID
[
CUSTOMHID_SIZ_STRING_LANGID
] =

252 
CUSTOMHID_SIZ_STRING_LANGID
,

253 
USB_STRING_DESCRIPTOR_TYPE
,

259 c⁄° 
uöt8_t
 
	gCu°omHID_SåögVíd‹
[
CUSTOMHID_SIZ_STRING_VENDOR
] =

261 
CUSTOMHID_SIZ_STRING_VENDOR
,

262 
USB_STRING_DESCRIPTOR_TYPE
,

269 c⁄° 
uöt8_t
 
	gCu°omHID_SåögProdu˘
[
CUSTOMHID_SIZ_STRING_PRODUCT
] =

271 
CUSTOMHID_SIZ_STRING_PRODUCT
,

272 
USB_STRING_DESCRIPTOR_TYPE
,

277 
uöt8_t
 
	gCu°omHID_SåögSîül
[
CUSTOMHID_SIZ_STRING_SERIAL
] =

279 
CUSTOMHID_SIZ_STRING_SERIAL
,

280 
USB_STRING_DESCRIPTOR_TYPE
,

	@src/usb_endp.c

31 
	~"hw_c⁄fig.h
"

32 
	~"usb_lib.h
"

33 
	~"usb_i°r.h
"

39 
uöt8_t
 
	gRe˚ive_Buf„r
[2];

40 
__IO
 
uöt8_t
 
PªvX„rCom∂ëe
;

50 
	$EP1_OUT_CÆlback
()

52 
BôA˘i⁄
 
Led_Sèã
;

55 
	`USB_SIL_Ród
(
EP1_OUT
, 
Re˚ive_Buf„r
);

57 i‡(
Re˚ive_Buf„r
[1] == 0)

59 
Led_Sèã
 = 
Bô_RESET
;

63 
Led_Sèã
 = 
Bô_SET
;

67 
Re˚ive_Buf„r
[0])

70 i‡(
Led_Sèã
 !
Bô_RESET
)

72 
	`STM_EVAL_LEDOn
(
LED1
);

76 
	`STM_EVAL_LEDOff
(
LED1
);

80 i‡(
Led_Sèã
 !
Bô_RESET
)

82 
	`STM_EVAL_LEDOn
(
LED2
);

86 
	`STM_EVAL_LEDOff
(
LED2
);

90 i‡(
Led_Sèã
 !
Bô_RESET
)

92 
	`STM_EVAL_LEDOn
(
LED3
);

96 
	`STM_EVAL_LEDOff
(
LED3
);

100 i‡(
Led_Sèã
 !
Bô_RESET
)

102 
	`STM_EVAL_LEDOn
(
LED4
);

106 
	`STM_EVAL_LEDOff
(
LED4
);

110 
	`STM_EVAL_LEDOff
(
LED1
);

111 
	`STM_EVAL_LEDOff
(
LED2
);

112 
	`STM_EVAL_LEDOff
(
LED3
);

113 
	`STM_EVAL_LEDOff
(
LED4
);

117 
	`SëEPRxSètus
(
ENDP1
, 
EP_RX_VALID
);

119 
	}
}

128 
	$EP1_IN_CÆlback
()

130 
PªvX„rCom∂ëe
 = 1;

131 
	}
}

	@src/usb_istr.c

30 
	~"usb_lib.h
"

31 
	~"usb_¥›.h
"

32 
	~"usb_pwr.h
"

33 
	~"usb_i°r.h
"

39 
__IO
 
uöt16_t
 
	gwI°r
;

40 
__IO
 
uöt8_t
 
	gbI¡PackSOF
 = 0;

41 
__IO
 
uöt32_t
 
	gesof_cou¡î
 =0;

42 
__IO
 
uöt32_t
 
	gwCNTR
=0;

48 (*
pEpI¡_IN
[7])() =

50 
EP1_IN_CÆlback
,

51 
EP2_IN_CÆlback
,

52 
EP3_IN_CÆlback
,

53 
EP4_IN_CÆlback
,

54 
EP5_IN_CÆlback
,

55 
EP6_IN_CÆlback
,

56 
EP7_IN_CÆlback
,

57 
	}
};

59 (*
pEpI¡_OUT
[7])() =

61 
EP1_OUT_CÆlback
,

62 
EP2_OUT_CÆlback
,

63 
EP3_OUT_CÆlback
,

64 
EP4_OUT_CÆlback
,

65 
EP5_OUT_CÆlback
,

66 
EP6_OUT_CÆlback
,

67 
EP7_OUT_CÆlback
,

68 
	}
};

77 
	$USB_I°r
()

79 
uöt32_t
 
i
=0;

80 
__IO
 
uöt32_t
 
EP
[8];

82 
wI°r
 = 
	`_GëISTR
();

84 #i‡(
IMR_MSK
 & 
ISTR_CTR
)

85 i‡(
wI°r
 & 
ISTR_CTR
 & 
wI¡îru±_Mask
)

89 
	`CTR_LP
();

90 #ifde‡
CTR_CALLBACK


91 
	`CTR_CÆlback
();

96 #i‡(
IMR_MSK
 & 
ISTR_RESET
)

97 i‡(
wI°r
 & 
ISTR_RESET
 & 
wI¡îru±_Mask
)

99 
	`_SëISTR
((
uöt16_t
)
CLR_RESET
);

100 
Devi˚_Pr›îty
.
	`Re£t
();

101 #ifde‡
RESET_CALLBACK


102 
	`RESET_CÆlback
();

107 #i‡(
IMR_MSK
 & 
ISTR_DOVR
)

108 i‡(
wI°r
 & 
ISTR_DOVR
 & 
wI¡îru±_Mask
)

110 
	`_SëISTR
((
uöt16_t
)
CLR_DOVR
);

111 #ifde‡
DOVR_CALLBACK


112 
	`DOVR_CÆlback
();

117 #i‡(
IMR_MSK
 & 
ISTR_ERR
)

118 i‡(
wI°r
 & 
ISTR_ERR
 & 
wI¡îru±_Mask
)

120 
	`_SëISTR
((
uöt16_t
)
CLR_ERR
);

121 #ifde‡
ERR_CALLBACK


122 
	`ERR_CÆlback
();

127 #i‡(
IMR_MSK
 & 
ISTR_WKUP
)

128 i‡(
wI°r
 & 
ISTR_WKUP
 & 
wI¡îru±_Mask
)

130 
	`_SëISTR
((
uöt16_t
)
CLR_WKUP
);

131 
	`Resume
(
RESUME_EXTERNAL
);

132 #ifde‡
WKUP_CALLBACK


133 
	`WKUP_CÆlback
();

138 #i‡(
IMR_MSK
 & 
ISTR_SUSP
)

139 i‡(
wI°r
 & 
ISTR_SUSP
 & 
wI¡îru±_Mask
)

143 i‡(
fSu•ídE«bÀd
)

145 
	`Su•íd
();

150 
	`Resume
(
RESUME_LATER
);

153 
	`_SëISTR
((
uöt16_t
)
CLR_SUSP
);

154 #ifde‡
SUSP_CALLBACK


155 
	`SUSP_CÆlback
();

160 #i‡(
IMR_MSK
 & 
ISTR_SOF
)

161 i‡(
wI°r
 & 
ISTR_SOF
 & 
wI¡îru±_Mask
)

163 
	`_SëISTR
((
uöt16_t
)
CLR_SOF
);

164 
bI¡PackSOF
++;

166 #ifde‡
SOF_CALLBACK


167 
	`SOF_CÆlback
();

172 #i‡(
IMR_MSK
 & 
ISTR_ESOF
)

173 i‡(
wI°r
 & 
ISTR_ESOF
 & 
wI¡îru±_Mask
)

176 
	`_SëISTR
((
uöt16_t
)
CLR_ESOF
);

178 i‡((
	`_GëFNR
()&
FNR_RXDP
)!=0)

181 
esof_cou¡î
 ++;

184 i‡((
esof_cou¡î
 >3)&&((
	`_GëCNTR
()&
CNTR_FSUSP
)==0))

189 
wCNTR
 = 
	`_GëCNTR
();

192 
i
=0;i<8;i++Ë
EP
[i] = 
	`_GëENDPOINT
(i);

195 
wCNTR
|=
CNTR_FRES
;

196 
	`_SëCNTR
(
wCNTR
);

199 
wCNTR
&=~
CNTR_FRES
;

200 
	`_SëCNTR
(
wCNTR
);

203 (
	`_GëISTR
()&
ISTR_RESET
) == 0);

206 
	`_SëISTR
((
uöt16_t
)
CLR_RESET
);

209 
i
=0;i<8;i++)

210 
	`_SëENDPOINT
(
i
, 
EP
[i]);

212 
esof_cou¡î
 = 0;

217 
esof_cou¡î
 = 0;

221 
	`Resume
(
RESUME_ESOF
);

223 #ifde‡
ESOF_CALLBACK


224 
	`ESOF_CÆlback
();

228 
	}
}

	@src/usb_prop.c

31 
	~"hw_c⁄fig.h
"

32 
	~"usb_lib.h
"

33 
	~"usb_c⁄f.h
"

34 
	~"usb_¥›.h
"

35 
	~"usb_desc.h
"

36 
	~"usb_pwr.h
"

43 
uöt32_t
 
	gPrŸocﬁVÆue
;

44 
__IO
 
uöt8_t
 
	gEXTI_E«bÀ
;

45 
__IO
 
uöt8_t
 
	gReque°
 = 0;

46 
uöt8_t
 
	gRï‹t_Buf
[2];

51 
DEVICE
 
	gDevi˚_TabÀ
 =

53 
EP_NUM
,

57 
DEVICE_PROP
 
	gDevi˚_Pr›îty
 =

59 
Cu°omHID_öô
,

60 
Cu°omHID_Re£t
,

61 
Cu°omHID_Sètus_In
,

62 
Cu°omHID_Sètus_Out
,

63 
Cu°omHID_D©a_Sëup
,

64 
Cu°omHID_NoD©a_Sëup
,

65 
Cu°omHID_Gë_I¡îÁ˚_Sëtög
,

66 
Cu°omHID_GëDevi˚Des¸ùt‹
,

67 
Cu°omHID_GëC⁄figDes¸ùt‹
,

68 
Cu°omHID_GëSåögDes¸ùt‹
,

72 
USER_STANDARD_REQUESTS
 
	gU£r_Sènd¨d_Reque°s
 =

74 
Cu°omHID_GëC⁄figuøti⁄
,

75 
Cu°omHID_SëC⁄figuøti⁄
,

76 
Cu°omHID_GëI¡îÁ˚
,

77 
Cu°omHID_SëI¡îÁ˚
,

78 
Cu°omHID_GëSètus
,

79 
Cu°omHID_CÀ¨Fótuª
,

80 
Cu°omHID_SëEndPoötFótuª
,

81 
Cu°omHID_SëDevi˚Fótuª
,

82 
Cu°omHID_SëDevi˚Addªss


85 
ONE_DESCRIPTOR
 
	gDevi˚_Des¸ùt‹
 =

87 (
uöt8_t
*)
Cu°omHID_Devi˚Des¸ùt‹
,

88 
CUSTOMHID_SIZ_DEVICE_DESC


91 
ONE_DESCRIPTOR
 
	gC⁄fig_Des¸ùt‹
 =

93 (
uöt8_t
*)
Cu°omHID_C⁄figDes¸ùt‹
,

94 
CUSTOMHID_SIZ_CONFIG_DESC


97 
ONE_DESCRIPTOR
 
	gCu°omHID_Rï‹t_Des¸ùt‹
 =

99 (
uöt8_t
 *)
Cu°omHID_Rï‹tDes¸ùt‹
,

100 
CUSTOMHID_SIZ_REPORT_DESC


103 
ONE_DESCRIPTOR
 
	gCu°omHID_Hid_Des¸ùt‹
 =

105 (
uöt8_t
*)
Cu°omHID_C⁄figDes¸ùt‹
 + 
CUSTOMHID_OFF_HID_DESC
,

106 
CUSTOMHID_SIZ_HID_DESC


109 
ONE_DESCRIPTOR
 
	gSåög_Des¸ùt‹
[4] =

111 {(
uöt8_t
*)
Cu°omHID_SåögL™gID
, 
CUSTOMHID_SIZ_STRING_LANGID
},

112 {(
uöt8_t
*)
Cu°omHID_SåögVíd‹
, 
CUSTOMHID_SIZ_STRING_VENDOR
},

113 {(
uöt8_t
*)
Cu°omHID_SåögProdu˘
, 
CUSTOMHID_SIZ_STRING_PRODUCT
},

114 {(
uöt8_t
*)
Cu°omHID_SåögSîül
, 
CUSTOMHID_SIZ_STRING_SERIAL
}

121 
uöt8_t
 *
Cu°omHID_SëRï‹t_Fótuª
(
uöt16_t
 
Lígth
);

133 
	$Cu°omHID_öô
()

137 
	`Gë_SîülNum
();

139 
pInf‹m©i⁄
->
Cuºít_C⁄figuøti⁄
 = 0;

141 
	`PowîOn
();

144 
	`USB_SIL_Inô
();

146 
bDevi˚Sèã
 = 
UNCONNECTED
;

147 
	}
}

156 
	$Cu°omHID_Re£t
()

159 
pInf‹m©i⁄
->
Cuºít_C⁄figuøti⁄
 = 0;

160 
pInf‹m©i⁄
->
Cuºít_I¡îÁ˚
 = 0;

163 
pInf‹m©i⁄
->
Cuºít_Fótuª
 = 
Cu°omHID_C⁄figDes¸ùt‹
[7];

165 
	`SëBTABLE
(
BTABLE_ADDRESS
);

168 
	`SëEPTy≥
(
ENDP0
, 
EP_CONTROL
);

169 
	`SëEPTxSètus
(
ENDP0
, 
EP_TX_STALL
);

170 
	`SëEPRxAddr
(
ENDP0
, 
ENDP0_RXADDR
);

171 
	`SëEPTxAddr
(
ENDP0
, 
ENDP0_TXADDR
);

172 
	`CÀ¨_Sètus_Out
(
ENDP0
);

173 
	`SëEPRxCou¡
(
ENDP0
, 
Devi˚_Pr›îty
.
MaxPackëSize
);

174 
	`SëEPRxVÆid
(
ENDP0
);

177 
	`SëEPTy≥
(
ENDP1
, 
EP_INTERRUPT
);

178 
	`SëEPTxAddr
(
ENDP1
, 
ENDP1_TXADDR
);

179 
	`SëEPRxAddr
(
ENDP1
, 
ENDP1_RXADDR
);

180 
	`SëEPTxCou¡
(
ENDP1
, 2);

181 
	`SëEPRxCou¡
(
ENDP1
, 2);

182 
	`SëEPRxSètus
(
ENDP1
, 
EP_RX_VALID
);

183 
	`SëEPTxSètus
(
ENDP1
, 
EP_TX_NAK
);

186 
	`SëDevi˚Addªss
(0);

187 
bDevi˚Sèã
 = 
ATTACHED
;

188 
	}
}

197 
	$Cu°omHID_SëC⁄figuøti⁄
()

199 i‡(
pInf‹m©i⁄
->
Cuºít_C⁄figuøti⁄
 != 0)

202 
bDevi˚Sèã
 = 
CONFIGURED
;

205 #i‡
	`deföed
(
STM32L1XX_MD
Ë|| deföed(
STM32L1XX_HD
)|| deföed(
STM32L1XX_MD_PLUS
)|| deföed(
STM32F37X
)

206 
	`ADC_So·w¨eSèπC⁄v
(
ADC1
);

207 #ñi‡
	`deföed
 (
STM32F30X
)

208 
	`ADC_SèπC⁄vîsi⁄
(
ADC1
);

210 
	`ADC_So·w¨eSèπC⁄vCmd
(
ADC1
, 
ENABLE
);

213 
	}
}

221 
	$Cu°omHID_SëDevi˚Addªss
 ()

223 
bDevi˚Sèã
 = 
ADDRESSED
;

224 
	}
}

232 
	$Cu°omHID_Sètus_In
()

234 
BôA˘i⁄
 
Led_Sèã
;

236 i‡(
Rï‹t_Buf
[1] == 0)

238 
Led_Sèã
 = 
Bô_RESET
;

242 
Led_Sèã
 = 
Bô_SET
;

245 
Rï‹t_Buf
[0])

250 i‡(
Led_Sèã
 !
Bô_RESET
)

252 
	`STM_EVAL_LEDOn
(
LED1
);

256 
	`STM_EVAL_LEDOff
(
LED1
);

260 i‡(
Led_Sèã
 !
Bô_RESET
)

262 
	`STM_EVAL_LEDOn
(
LED2
);

266 
	`STM_EVAL_LEDOff
(
LED2
);

270 i‡(
Led_Sèã
 !
Bô_RESET
)

272 
	`STM_EVAL_LEDOn
(
LED3
);

276 
	`STM_EVAL_LEDOff
(
LED3
);

280 i‡(
Led_Sèã
 !
Bô_RESET
)

282 
	`STM_EVAL_LEDOn
(
LED4
);

286 
	`STM_EVAL_LEDOff
(
LED4
);

290 
	`STM_EVAL_LEDOff
(
LED1
);

291 
	`STM_EVAL_LEDOff
(
LED2
);

292 
	`STM_EVAL_LEDOff
(
LED3
);

293 
	`STM_EVAL_LEDOff
(
LED4
);

296 
	}
}

305 
	$Cu°omHID_Sètus_Out
 ()

307 
	}
}

316 
RESULT
 
	$Cu°omHID_D©a_Sëup
(
uöt8_t
 
Reque°No
)

318 
uöt8_t
 *(*
C›yRoutöe
)(
uöt16_t
);

320 i‡(
pInf‹m©i⁄
->
USBwIndex
 != 0)

321  
USB_UNSUPPORT
;

323 
C›yRoutöe
 = 
NULL
;

325 i‡((
Reque°No
 =
GET_DESCRIPTOR
)

326 && (
Ty≥_Recùõ¡
 =(
STANDARD_REQUEST
 | 
INTERFACE_RECIPIENT
))

330 i‡(
pInf‹m©i⁄
->
USBwVÆue1
 =
REPORT_DESCRIPTOR
)

332 
C›yRoutöe
 = 
Cu°omHID_GëRï‹tDes¸ùt‹
;

334 i‡(
pInf‹m©i⁄
->
USBwVÆue1
 =
HID_DESCRIPTOR_TYPE
)

336 
C›yRoutöe
 = 
Cu°omHID_GëHIDDes¸ùt‹
;

342 i‡–(
Ty≥_Recùõ¡
 =(
CLASS_REQUEST
 | 
INTERFACE_RECIPIENT
)) )

344  
Reque°No
 )

346 
GET_PROTOCOL
:

347 
C›yRoutöe
 = 
Cu°omHID_GëPrŸocﬁVÆue
;

349 
SET_REPORT
:

350 
C›yRoutöe
 = 
Cu°omHID_SëRï‹t_Fótuª
;

351 
Reque°
 = 
SET_REPORT
;

358 i‡(
C›yRoutöe
 =
NULL
)

360  
USB_UNSUPPORT
;

363 
pInf‹m©i⁄
->
Cål_Info
.
C›yD©a
 = 
C›yRoutöe
;

364 
pInf‹m©i⁄
->
Cål_Info
.
Usb_wOff£t
 = 0;

365 (*
C›yRoutöe
)(0);

366  
USB_SUCCESS
;

367 
	}
}

376 
uöt8_t
 *
	$Cu°omHID_SëRï‹t_Fótuª
(
uöt16_t
 
Lígth
)

378 i‡(
Lígth
 == 0)

380 
pInf‹m©i⁄
->
Cål_Info
.
Usb_wLígth
 = 2;

381  
NULL
;

385  
Rï‹t_Buf
;

387 
	}
}

396 
RESULT
 
	$Cu°omHID_NoD©a_Sëup
(
uöt8_t
 
Reque°No
)

398 i‡((
Ty≥_Recùõ¡
 =(
CLASS_REQUEST
 | 
INTERFACE_RECIPIENT
))

399 && (
Reque°No
 =
SET_PROTOCOL
))

401  
	`Cu°omHID_SëPrŸocﬁ
();

406  
USB_UNSUPPORT
;

408 
	}
}

417 
uöt8_t
 *
	$Cu°omHID_GëDevi˚Des¸ùt‹
(
uöt16_t
 
Lígth
)

419  
	`Sènd¨d_GëDes¸ùt‹D©a
(
Lígth
, &
Devi˚_Des¸ùt‹
);

420 
	}
}

429 
uöt8_t
 *
	$Cu°omHID_GëC⁄figDes¸ùt‹
(
uöt16_t
 
Lígth
)

431  
	`Sènd¨d_GëDes¸ùt‹D©a
(
Lígth
, &
C⁄fig_Des¸ùt‹
);

432 
	}
}

441 
uöt8_t
 *
	$Cu°omHID_GëSåögDes¸ùt‹
(
uöt16_t
 
Lígth
)

443 
uöt8_t
 
wVÆue0
 = 
pInf‹m©i⁄
->
USBwVÆue0
;

444 i‡(
wVÆue0
 > 4)

446  
NULL
;

450  
	`Sènd¨d_GëDes¸ùt‹D©a
(
Lígth
, &
Såög_Des¸ùt‹
[
wVÆue0
]);

452 
	}
}

461 
uöt8_t
 *
	$Cu°omHID_GëRï‹tDes¸ùt‹
(
uöt16_t
 
Lígth
)

463  
	`Sènd¨d_GëDes¸ùt‹D©a
(
Lígth
, &
Cu°omHID_Rï‹t_Des¸ùt‹
);

464 
	}
}

473 
uöt8_t
 *
	$Cu°omHID_GëHIDDes¸ùt‹
(
uöt16_t
 
Lígth
)

475  
	`Sènd¨d_GëDes¸ùt‹D©a
(
Lígth
, &
Cu°omHID_Hid_Des¸ùt‹
);

476 
	}
}

487 
RESULT
 
	$Cu°omHID_Gë_I¡îÁ˚_Sëtög
(
uöt8_t
 
I¡îÁ˚
, uöt8_à
A…î«ãSëtög
)

489 i‡(
A…î«ãSëtög
 > 0)

491  
USB_UNSUPPORT
;

493 i‡(
I¡îÁ˚
 > 0)

495  
USB_UNSUPPORT
;

497  
USB_SUCCESS
;

498 
	}
}

507 
RESULT
 
	$Cu°omHID_SëPrŸocﬁ
()

509 
uöt8_t
 
wVÆue0
 = 
pInf‹m©i⁄
->
USBwVÆue0
;

510 
PrŸocﬁVÆue
 = 
wVÆue0
;

511  
USB_SUCCESS
;

512 
	}
}

521 
uöt8_t
 *
	$Cu°omHID_GëPrŸocﬁVÆue
(
uöt16_t
 
Lígth
)

523 i‡(
Lígth
 == 0)

525 
pInf‹m©i⁄
->
Cål_Info
.
Usb_wLígth
 = 1;

526  
NULL
;

530  (
uöt8_t
 *)(&
PrŸocﬁVÆue
);

532 
	}
}

	@src/usb_pwr.c

30 
	~"usb_lib.h
"

31 
	~"usb_c⁄f.h
"

32 
	~"usb_pwr.h
"

33 
	~"hw_c⁄fig.h
"

39 
__IO
 
uöt32_t
 
	gbDevi˚Sèã
 = 
UNCONNECTED
;

40 
__IO
 
boﬁ
 
	gfSu•ídE«bÀd
 = 
TRUE
;

41 
__IO
 
uöt32_t
 
	gEP
[8];

45 
__IO
 
RESUME_STATE
 
	meSèã
;

46 
__IO
 
uöt8_t
 
	mbESOF˙t
;

48 
	gResumeS
;

50 
__IO
 
uöt32_t
 
	gªmŸewakeup⁄
=0;

64 
RESULT
 
	$PowîOn
()

66 
uöt16_t
 
wRegVÆ
;

69 
	`USB_CabÀ_C⁄fig
(
ENABLE
);

72 
wRegVÆ
 = 
CNTR_FRES
;

73 
	`_SëCNTR
(
wRegVÆ
);

76 
wI¡îru±_Mask
 = 0;

77 
	`_SëCNTR
(
wI¡îru±_Mask
);

79 
	`_SëISTR
(0);

81 
wI¡îru±_Mask
 = 
CNTR_RESETM
 | 
CNTR_SUSPM
 | 
CNTR_WKUPM
;

82 
	`_SëCNTR
(
wI¡îru±_Mask
);

84  
USB_SUCCESS
;

85 
	}
}

94 
RESULT
 
	$PowîOff
()

97 
	`_SëCNTR
(
CNTR_FRES
);

99 
	`_SëISTR
(0);

101 
	`USB_CabÀ_C⁄fig
(
DISABLE
);

103 
	`_SëCNTR
(
CNTR_FRES
 + 
CNTR_PDWN
);

107  
USB_SUCCESS
;

108 
	}
}

117 
	$Su•íd
()

119 
uöt32_t
 
i
 =0;

120 
uöt16_t
 
wCNTR
;

121 
uöt32_t
 
tm¥eg
 = 0;

122 
__IO
 
uöt32_t
 
ßvePWR_CR
=0;

127 
wCNTR
 = 
	`_GëCNTR
();

132 
i
=0;i<8;i++Ë
EP
[i] = 
	`_GëENDPOINT
(i);

135 
wCNTR
|=
CNTR_RESETM
;

136 
	`_SëCNTR
(
wCNTR
);

139 
wCNTR
|=
CNTR_FRES
;

140 
	`_SëCNTR
(
wCNTR
);

143 
wCNTR
&=~
CNTR_FRES
;

144 
	`_SëCNTR
(
wCNTR
);

147 (
	`_GëISTR
()&
ISTR_RESET
) == 0);

150 
	`_SëISTR
((
uöt16_t
)
CLR_RESET
);

153 
i
=0;i<8;i++)

154 
	`_SëENDPOINT
(
i
, 
EP
[i]);

157 
wCNTR
 |
CNTR_FSUSP
;

158 
	`_SëCNTR
(
wCNTR
);

161 
wCNTR
 = 
	`_GëCNTR
();

162 
wCNTR
 |
CNTR_LPMODE
;

163 
	`_SëCNTR
(
wCNTR
);

167 
ßvePWR_CR
 = 
PWR
->
CR
;

168 
tm¥eg
 = 
PWR
->
CR
;

170 
tm¥eg
 &((
uöt32_t
)0xFFFFFFFC);

172 
tm¥eg
 |
PWR_Reguœt‹_LowPowî
;

174 
PWR
->
CR
 = 
tm¥eg
;

176 #i‡
	`deföed
 (
STM32F30X
Ë|| deföed (
STM32F37X
)

177 
SCB
->
SCR
 |
SCB_SCR_SLEEPDEEP_Msk
;

179 
SCB
->
SCR
 |
SCB_SCR_SLEEPDEEP
;

183 if((
	`_GëISTR
()&
ISTR_WKUP
)==0)

185 
	`__WFI
();

187 #i‡
	`deföed
 (
STM32F30X
Ë|| deföed (
STM32F37X
)

188 
SCB
->
SCR
 &(
uöt32_t
)~((uöt32_t)
SCB_SCR_SLEEPDEEP_Msk
);

190 
SCB
->
SCR
 &(
uöt32_t
)~((uöt32_t)
SCB_SCR_SLEEPDEEP
);

196 
	`_SëISTR
(
CLR_WKUP
);

198 
wCNTR
 = 
	`_GëCNTR
();

199 
wCNTR
&=~
CNTR_FSUSP
;

200 
	`_SëCNTR
(
wCNTR
);

204 
PWR
->
CR
 = 
ßvePWR_CR
;

207 #i‡
	`deföed
 (
STM32F30X
Ë|| deföed (
STM32F37X
)

208 
SCB
->
SCR
 &(
uöt32_t
)~((uöt32_t)
SCB_SCR_SLEEPDEEP_Msk
);

210 
SCB
->
SCR
 &(
uöt32_t
)~((uöt32_t)
SCB_SCR_SLEEPDEEP
);

213 
	}
}

222 
	$Resume_Inô
()

224 
uöt16_t
 
wCNTR
;

231 
wCNTR
 = 
	`_GëCNTR
();

232 
wCNTR
 &(~
CNTR_LPMODE
);

233 
	`_SëCNTR
(
wCNTR
);

237 
	`Lóve_LowPowîMode
();

240 
	`_SëCNTR
(
IMR_MSK
);

245 
	}
}

259 
	$Resume
(
RESUME_STATE
 
eResumeSëVÆ
)

261 
uöt16_t
 
wCNTR
;

263 i‡(
eResumeSëVÆ
 !
RESUME_ESOF
)

264 
ResumeS
.
eSèã
 = 
eResumeSëVÆ
;

265 
ResumeS
.
eSèã
)

267 
RESUME_EXTERNAL
:

268 i‡(
ªmŸewakeup⁄
 ==0)

270 
	`Resume_Inô
();

271 
ResumeS
.
eSèã
 = 
RESUME_OFF
;

275 
ResumeS
.
eSèã
 = 
RESUME_ON
;

278 
RESUME_INTERNAL
:

279 
	`Resume_Inô
();

280 
ResumeS
.
eSèã
 = 
RESUME_START
;

281 
ªmŸewakeup⁄
 = 1;

283 
RESUME_LATER
:

284 
ResumeS
.
bESOF˙t
 = 2;

285 
ResumeS
.
eSèã
 = 
RESUME_WAIT
;

287 
RESUME_WAIT
:

288 
ResumeS
.
bESOF˙t
--;

289 i‡(
ResumeS
.
bESOF˙t
 == 0)

290 
ResumeS
.
eSèã
 = 
RESUME_START
;

292 
RESUME_START
:

293 
wCNTR
 = 
	`_GëCNTR
();

294 
wCNTR
 |
CNTR_RESUME
;

295 
	`_SëCNTR
(
wCNTR
);

296 
ResumeS
.
eSèã
 = 
RESUME_ON
;

297 
ResumeS
.
bESOF˙t
 = 10;

299 
RESUME_ON
:

300 
ResumeS
.
bESOF˙t
--;

301 i‡(
ResumeS
.
bESOF˙t
 == 0)

303 
wCNTR
 = 
	`_GëCNTR
();

304 
wCNTR
 &(~
CNTR_RESUME
);

305 
	`_SëCNTR
(
wCNTR
);

306 
ResumeS
.
eSèã
 = 
RESUME_OFF
;

307 
ªmŸewakeup⁄
 = 0;

310 
RESUME_OFF
:

311 
RESUME_ESOF
:

313 
ResumeS
.
eSèã
 = 
RESUME_OFF
;

316 
	}
}

	@
1
.
0
24
419
inc/hw_config.h
inc/platform_config.h
inc/stm32_it.h
inc/stm32f10x_conf.h
inc/stm32f30x_conf.h
inc/stm32f37x_conf.h
inc/stm32l1xx_conf.h
inc/usb_conf.h
inc/usb_desc.h
inc/usb_istr.h
inc/usb_prop.h
inc/usb_pwr.h
src/hw_config.c
src/main.c
src/stm32_it.c
src/system_stm32f10x.c
src/system_stm32f30x.c
src/system_stm32f37x.c
src/system_stm32l1xx.c
src/usb_desc.c
src/usb_endp.c
src/usb_istr.c
src/usb_prop.c
src/usb_pwr.c
